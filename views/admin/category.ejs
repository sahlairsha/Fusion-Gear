<%- include('../../views/partials/admin/header') %>

<div class="container mt-4">
    <h2 class="mb-4">Category Details</h2>

    <% if (flash.error) { %>
        <div class="alert alert-danger">
            <%= flash.error %>
        </div>
    <% } %>

    <% if (flash.success) { %>
        <div class="alert alert-success">
            <%= flash.success %>
        </div>
    <% } %>
    <div class="mb-3">
        <input type="text" class="form-control" id="searchBar" placeholder="Search categories by name or description">
    </div>
    <button class="btn btn-success text-white mb-2 d-flex w-20 ms-auto">
        <a class="text-white" href="/admin/addCategory">Add Item</a>
    </button>
    <table class="table table-light">
        <thead class="table-secondary">
            <tr>
                <th scope="col"><input type="checkbox" id="selectAll"></th>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
                <th scope="col">Offer</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            <% category.forEach((category, index) => { %>
                <tr data-category-id="<%= category._id %>">
                    <td><input type="checkbox" class="checkbox"></td>
                    <td><%= index + 1 %></td>
                    <td class="editable" contenteditable="false"><%= category.name %></td>
                 <td class="editable w-25" contenteditable="false"><%= category.description %></td>
                 <td class="editable" contenteditable="false"><%= category.categoryDiscount.percentage %></td>
                 <td class="editable" contenteditable="false">
                <%= category.categoryDiscount.startDate ? new Date(category.categoryDiscount.startDate).toLocaleDateString() : 'NA' %>
                </td>
                <td class="editable" contenteditable="false">
                    <%= category.categoryDiscount.endDate ? new Date(category.categoryDiscount.endDate).toLocaleDateString() : 'NA' %>
                </td>
<td>
    <button class="btn btn-primary btn-md edit-button">Edit</button>
    <% if (category.isDeleted === false) { %>
        <button class="btn btn-warning btn-md">
            <a href="/admin/deletecategory?id=<%= category._id %>" class="text-white" style="text-decoration: none;">Delete</a>
        </button>
    <% } else { %>
        <button class="btn btn-success btn-md">
            <a href="/admin/restorecategory?id=<%= category._id %>" class="text-white" style="text-decoration: none;">Restore</a>
        </button>
    <% } %>
</td>
                </tr>
            <% }); %>
        </tbody>
    </table>

    <div class="pagination-container d-flex align-items-center justify-content-center mt-5">
        <% if (currentPage > 1) { %>
            <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
            <% if (i === currentPage) { %>
                <span class="current-page"><%= i %></span>
            <% } else { %>
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            <% } %>
        <% } %>
        <% if (currentPage < totalPages) { %>
            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } %>
    </div>
</div>

<script src="/js/admin/customer-search.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const editButtons = document.querySelectorAll('.edit-button');

    editButtons.forEach(button => {
        button.addEventListener('click', function () {
            const row = button.closest('tr');
            const nameCell = row.cells[2];
            const descriptionCell = row.cells[3];
            const discountCell = row.cells[4];
            const startDateCell = row.cells[5];
            const endDateCell = row.cells[6];

            const isEditable = nameCell.contentEditable === 'true';
            nameCell.contentEditable = !isEditable;
            descriptionCell.contentEditable = !isEditable;
            discountCell.contentEditable = !isEditable;
            startDateCell.contentEditable = !isEditable;
            endDateCell.contentEditable = !isEditable;

            if (isEditable) {
                const categoryId = row.getAttribute('data-category-id');
                const updatedName = nameCell.textContent.trim();
                const updatedDescription = descriptionCell.textContent.trim();
                const updatedDiscount = discountCell.textContent.trim();
                const updatedStartDate = startDateCell.textContent.trim();
                const updatedEndDate = endDateCell.textContent.trim();

                // Validation: Check if the fields are empty or only spaces
                if (updatedName === "" || updatedDescription === "") {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Name and Description cannot be empty or spaces only.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });

                    // Revert fields to non-editable mode and reset button text
                    nameCell.contentEditable = 'false';
                    descriptionCell.contentEditable = 'false';
                    button.textContent = "Edit";

                    return; // Exit without saving changes
                }

                // Make an AJAX request to update the category in the database
                fetch(`/admin/editcategory?id=${categoryId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: updatedName,
                        description: updatedDescription,
                        discount: updatedDiscount,
                        startDate: updatedStartDate,
                        endDate: updatedEndDate
                    }),
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Failed to save changes');
                    })
                    .then(updatedCategory => {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Changes saved successfully!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });

                        nameCell.contentEditable = 'false';
                        descriptionCell.contentEditable = 'false';
                        discountCell.contentEditable = 'false';
                        startDateCell.contentEditable = 'false';
                        endDateCell.contentEditable = 'false';

                        button.textContent = "Edit";
                    })
                    .catch(error => {
                        console.error(error);

                        Swal.fire({
                            title: 'Error!',
                            text: 'Error saving changes',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            } else {
                button.textContent = "Save";
                nameCell.focus();
            }
        });
    });
});

</script>





<%- include('../../views/partials/admin/footer') %>
