<%- include('../../views/partials/admin/header') %>

<style>
.modal {
    display: none; /* Initially hidden */
    position: fixed;
    z-index: 1000;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    height: 50%;
    background: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.3s ease-in-out;
}

.modal-header {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 15px;
    text-align: center;
}

.modal-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.modal-actions button {
    padding: 10px 15px;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.cancel-btn {
    background-color: #000;
    color: #fff;
}

.cancel-btn:hover {
    background-color: #ffff;
    color: #000;
    border: 1px solid #000;
}

.submit-btn {
    background-color: #fff;
    color: black;
    border: 1px solid #000;
}

.submit-btn:hover {
    background-color: #000;
    color: white;
}

#stockInput {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 5px;
    margin-top: 10px;
    box-sizing: border-box;
}

.overlay {
    display: none; /* Initially hidden */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

.overlay.active,
.modal.active {
    display: block;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

    .search-bar {
        margin: 20px 0;
        display: flex;
        justify-content: space-between;
    }
    .search-bar input, .search-bar select {
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    .stock-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 50px;
    }
    .stock-table th, .stock-table td {
        border: 1px solid #ddd;
        padding: 12px;
        text-align: center;
    }
    .stock-table th {
        background-color: #000000bd;
        color: white;
    }
    .stock-table td {
        vertical-align: middle;
    }
    .variant-details {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #ddd;
    }

    .variant-details:last-child {
        border-bottom: none;
    }

    .variant-info {
        flex-grow: 1;
    }

    .product-badge {
        margin-left: 20px;
        margin-top: 20px;
        display: inline-block;
    }

    .actions {
        margin-left: 10px;
        position: relative;
    }

    .actions i {
        font-size: 18px;
        cursor: pointer;
    }

    .dropdown-menu {
        display: none;
        position: absolute;
        right: 0;
        background-color: #fff;
        border: 1px solid #ddd;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        width: 150px;
        text-align: left;
        border-radius: 4px;
    }

    .actions:hover .dropdown-menu {
        display: block;
    }

    .dropdown-menu button {
        display: block;
        padding: 10px;
        text-decoration: none;
        color: #333;
        border-bottom: 1px solid #ddd;
        background: none;
        border: none;
        text-align: left;
        width: 100%;
    }

    .dropdown-menu button:last-child {
        border-bottom: none;
    }

    .dropdown-menu button:hover {
        background-color: #f8f9fa;
    }
    .product-badge {
        background-color: #ff6b6b;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 10px;
        font-weight: 600;
        
        text-transform: uppercase;
    }
    .product-badge.available {
        background-color: #28a745;
    }
    .product-badge.sold-out {
        background-color: #dc3545;
    }
    .product-badge.unavailable {
        background-color: #ffc107;
    }
    .product-badge.out-of-stock {
        background-color: #6c757d;
    }

    .variant-list {
        padding-left: 20px;
        text-align: left;
        list-style: none;
    }

</style>

<div class="container">
    <!-- Stock Table -->
    <div class="search-bar">
        <input type="text" id="searchProduct" placeholder="Search product..." oninput="filterProducts()" />
      
    </div>
    <table class="stock-table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Category</th>
                <th>Variants</th>
                <th>Block/Unblock</th>
            </tr>
        </thead>
        <tbody id="productTable">
            <% products.forEach((items) => { %>
                <tr data-product-id="<%= items._id %>" data-category-id="<%= items.category?._id %>">
                    <td><%= items.productName %></td>
                    <td><%= items.category ? items.category.name : 'No Category' %></td>
                    <td>
                        <% items.variants.forEach((variant) => { %>
                            <div class="variant-details">
                                <div class="variant-info">
                                    <strong>Size:</strong> <%= variant.size %><br>
                                    <strong>Stock:</strong> <%= variant.stock %>
                                    <div class="product-badge <%= variant.status?.toLowerCase()?.replace(/ /g, '-') || 'available' %>">
                                        <%= variant.status %>
                                    </div>
                                </div>
                                <div class="actions">
                                    <i class="fas fa-ellipsis-h"></i>
                                    <div class="dropdown-menu">
                                        <button onclick="openModal('add', '<%= items._id %>', '<%= variant._id %>')">Add Stock</button>
                                        <button onclick="openModal('reduce', '<%= items._id %>', '<%= variant._id %>')">Reduce Stock</button>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </td>
                    <td>
                        <% if (!items.isBlocked) { %>
                            <button class="btn btn-warning btn-sm">
                                <a href="/admin/blockStock?id=<%= items._id %>" class="text-white" style="text-decoration: none;">Block</a>
                            </button>
                        <% } else { %>
                            <button class="btn btn-success btn-sm">
                                <a href="/admin/unblockStock?id=<%= items._id %>" class="text-white" style="text-decoration: none;">Unblock</a>
                            </button>
                        <% } %>
                    </td>
                </tr>
            <% }) %>
        </tbody>
    </table>
    <div class="pagination-container d-flex align-items-center justify-content-center mt-5">
        <% if (currentPage > 1) { %>
            <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
            <% if (i === currentPage) { %>
                <span class="current-page"><%= i %></span>
            <% } else { %>
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            <% } %>
        <% } %>
        <% if (currentPage < totalPages) { %>
            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } %>
    </div>
</div>

<!-- Modal -->
<div class="overlay" id="overlay"></div>
<div class="modal" id="modal">
    <div class="modal-header" id="modalHeader">Add Stock</div>
    <input type="number" id="stockInput" name="stock" placeholder="Enter stock">
    <div class="modal-actions">
        <button class="cancel-btn" onclick="closeModal()">Cancel</button>
        <button class="submit-btn" onclick="submitStockChange()">Submit</button>
    </div>
</div>

<script>
    const modal = document.getElementById('modal');
    const overlay = document.getElementById('overlay');
    const modalHeader = document.getElementById('modalHeader');
    const stockInput = document.getElementById('stockInput');
    const productTable = document.getElementById('productTable');
    let productId = '';
    let variantId = '';
    let actionType = '';

    function openModal(type, prodId, varId) {
        actionType = type;
        productId = prodId;
        variantId = varId;

        modalHeader.innerText = type === 'add' ? 'Add Stock' : 'Reduce Stock';

        modal.classList.add('active');
        overlay.classList.add('active');
    }

    function closeModal() {
        modal.classList.remove('active');
        overlay.classList.remove('active');
    }

    async function submitStockChange() {
        const stock = parseInt(stockInput.value, 10);
        if (isNaN(stock) || stock <= 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please enter a valid quantity.',
                icon: 'warning',
                confirmButtonText: 'Okay'
            });
            return;
        }

        const actionUrl = actionType === 'add'
            ? `/stock/add/${productId}/${variantId}`
            : `/stock/reduce/${productId}/${variantId}`;

        try {
            const response = await fetch(actionUrl, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ stock })
            });

            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    title: 'Success',
                    text: `${data.message || 'Stock updated successfully'}`,
                    icon: 'success',
                    confirmButtonText: 'Okay'
                });
                closeModal();
                setTimeout(() => {
                    location.reload();
                }, 2000);
            } else {
                Swal.fire({
                    title: 'Error',
                    text: `${data.error || 'Failed to update stock'}`,
                    icon: 'error',
                    confirmButtonText: 'Okay'
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error',
                text: 'An error occurred while updating stock.',
                icon: 'error',
                confirmButtonText: 'Okay'
            });
            console.error('Error:', error);
        }
    }

    function filterProducts() {
        const searchValue = document.getElementById('searchProduct').value.toLowerCase();
        const categoryValue = document.getElementById('categoryFilter').value;

        [...productTable.children].forEach(row => {
            const productName = row.querySelector('td:first-child').innerText.toLowerCase();
            const categoryId = row.getAttribute('data-category-id');

            const matchesSearch = productName.includes(searchValue);
            const matchesCategory = !categoryValue || categoryId === categoryValue;

            row.style.display = matchesSearch && matchesCategory ? '' : 'none';
        });
    }
</script>
<%- include('../../views/partials/admin/footer') %>
