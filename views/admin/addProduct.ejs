<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
 .thumbnails-container {
        display: flex;
        overflow-x: auto;
        gap: 10px;
        }

.thumbnail {
    position: relative;
    width: 100px;
    height: 100px;
    border: 1px solid #ddd;
    padding: 5px;
    background-color: #f9f9f9;
    display: inline-block;
}

.thumbnail img {
    width: 50px;
    height: 50px;
    object-fit: contain;
}

.remove-icon {
    position: relative;
    top: 0;
    right: 0;
    font-size: 20px;
    color:#000;
    padding: 2px 5px;
    cursor: pointer;
}

        .image-cropper {
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            width: 300px;
            height: 200px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            margin-left: 30px;
        }

        .image-cropper img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }

        .content-main {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-left: 30px;
            margin-top: 30px;
        }

 

    </style>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header mb-5 mt-5">
                    <h2 class="content-title container-fluid">Add New Product</h2>
                </div>
            </div>
            <div class="container-fluid w-75 col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/add-products" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border">

                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="0" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Colors (comma-separated)</label>
                                        <input name="color" type="text" class="form-control border" placeholder="e.g., red, green, blue">
                                    </div>
                                    <div id="color-error" class="error-message"></div>
                                </div>

                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sizes (comma-separated)</label>
                                        <input name="size" type="text" class="form-control border" placeholder="e.g., S, M, L, XL">
                                    </div>
                                    <div id="size-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for (let i = 0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i]._id %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose image</h4>
                                </div>
                                <div class="border row ms-0 w-100">
                                    <div id="addedimageContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center " style="margin-bottom: 20px;">
                                        <img src="" class="" alt="" id="imgView1">
                                        <input class="form-control" type="file" name="image" id="input1"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage1(event), viewImage(event, 1)">
                                        <div id="image-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg1" alt="">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">


                                        <input class="form-control" type="file" name="image" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">


                                        <input class="form-control" type="file" name="image" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">



                                        <input class="form-control" type="file" name="image" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                            </div>
                    </div>
                    <div>
                        <button class="btn btn-info btn-md rounded font-sm hover-up" type="submit"
                            onclick="validateAndSubmit()">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <script>

        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit()
            }
        }



        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage(event, index) {
                   let input = event.target;
                   let reader = new FileReader();
                   reader.onload = function () {
                       let dataURL = reader.result;
                       let image = document.getElementById('imgView' + index);
                       image.src = dataURL;
                       let cropper = new Cropper(image, {
                           aspectRatio: 1,
                           viewMode: 1,
                           guides: true,
                           background: false,
                           autoCropArea: 1,
                           zoomable: true
                       });
                       let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                       cropperContainer.style.display = 'block';

                       let saveButton = document.querySelector('#saveButton' + index);
                       saveButton.addEventListener('click', async function () {
                           let croppedCanvas = cropper.getCroppedCanvas();
                           let croppedImage = document.getElementById("croppedImg" + index);
                           croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                           let timestamp = new Date().getTime();
                           let fileName = `cropped-img-${timestamp}-${index}.png`;
                           await croppedCanvas.toBlob(blob => {
                               let input = document.getElementById('input' + index);
                               let imgFile = new File([blob], fileName, blob)
                               const fileList = new DataTransfer();
                               fileList.items.add(imgFile);
                               input.files = fileList.files
                           });
                           cropperContainer.style.display = 'none';
                       });
                   };
                   reader.readAsDataURL(input.files[0]);
               }
        const selectedImages = [];

        const inputIds = ['input1', 'input2', 'input3', 'input4'];
        inputIds.forEach(id => {
  document.getElementById(id).addEventListener("change", handleFileSelect);
});
function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const quantity = document.getElementsByName('quantity')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const size = document.getElementsByName('size')[0].value;
    const category = document.getElementsByName('category')[0].value;
    let isValid = true;

    if (name.trim() === "" || !/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('productName-error', 'Please enter a valid product name with alphabetic characters.');
        isValid = false;
    }

    if (description.trim() === "" || description.trim().length < 10) {
        displayErrorMessage('description-error', 'Description should be at least 10 characters.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0 || parseFloat(salePrice) >= parseFloat(price)) {
        displayErrorMessage('salePrice-error', 'Sale price should be less than the regular price.');
        isValid = false;
    }

    if (parseInt(quantity) < 0 ) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if(parseInt(quantity) == 0){
        displayErrorMessage('quantity-error', 'Please enter a the quantity of the product.');
        isValid = false;
    }

    if(quantity == ""){
        displayErrorMessage('quantity-error', 'Please enter a this Field.');
        isValid = false;
    }

    if(size == ""){
        displayErrorMessage('size-error', 'Please enter a this Field.');
        isValid = false;
    }

    if (selectedImages.length === 0) {
        displayErrorMessage('image-error', 'Please upload at least one image.');
        isValid = false;
    }


    if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
    }


    return isValid;


name.addEventListener('blur',validateForm)
description.addEventListener('blur',validateForm)
price.addEventListener('blur',validateForm)
salePrice.addEventListener('blur',validateForm)
color.addEventListener('blur',validateForm)
quantity.addEventListener('blur',validateForm)

}







function handleFileSelect(event) {
    const addImagesContainer = document.getElementById("addedimageContainer");
    const files = Array.from(event.target.files);

    files.forEach(file => {
        if (!selectedImages.includes(file)) {
            selectedImages.push(file);
            const thumbnail = document.createElement("div");
            thumbnail.classList.add("thumbnail");

            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";
            const removeIcon = document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.innerHTML = "&times;";
            removeIcon.addEventListener('click', function () {
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages.splice(index, 1);
                    thumbnail.remove();
                }
            });

            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addImagesContainer.appendChild(thumbnail);
        }
    });
}


        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');


        }



    </script>

    <%- include("../../views/partials/admin/footer") %>