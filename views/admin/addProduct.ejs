<%- include("../../views/partials/admin/header") %>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />


        <style>

            .btn-info{
                padding: 10px 20px;
                margin-bottom:10px ;
                margin-left: 10px;
            }

/* Content Main */
.content-main {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    margin: 20px auto;
    max-width: 800px;
}

/* Form container */
.container-fluid {
    width: 100%;
    max-width: 800px;
}

/* Cards */
.card {
    background-color: #fff;
    border-radius: 8px;
    margin-bottom: 15px; /* Spacing between cards */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
}

.card-body {
    padding: 15px;
}



/* Form Labels and Inputs */
.form-label {
    font-size: 14px;
    font-weight: 500;
    margin-bottom: 8px;
}

.form-control {
    border-radius: 6px;
    padding: 8px;
    font-size: 13px;
    width: 100%;
    border: 1px solid #ddd; /* Minimal border */
    background-color: #fff; /* Clean input background */
    transition: border-color 0.3s ease; /* Smooth transition for focus */
}

.form-control:focus {
    border-color: #007bff; 
    outline: none;
} 

/* Textarea */
textarea.form-control {
    resize: vertical;
}

/* Select box */
.form-select {
    padding: 8px;
    border-radius: 6px;
    font-size: 13px;
    width: 100%;
    border: 1px solid #ddd; /* Same minimal border */
}

/* Error Messages */
.error-message {
    color: red;
    font-size: 12px;
    margin-top: 5px;
}

/* Thumbnails */
.thumbnails-container {
    display: flex;
    overflow-x: auto;
    gap: 8px;
    margin-bottom: 12px;
}

.thumbnail {
    position: relative;
    width: 80px;
    height: 80px;
    background-color: #f9f9f9;
    display: inline-block;
    border-radius: 6px; /* Rounded corners for thumbnails */
    padding: 4px;
    transition: background-color 0.3s ease;
}

.thumbnail:hover {
    background-color: #e9ecef; /* Hover effect */
}

.thumbnail img {
    width: 50px;
    height: 50px;
    object-fit: cover;
}

/* Image Cropping */
.image-cropper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 200px;
    margin-bottom: 15px;
    background-color: #f8f9fa;
    border-radius: 8px; /* Rounded corners */
    overflow: hidden;
    margin-left: 30px;
}

.image-cropper img {
    max-width: 100%;
    max-height: 100%;
    object-fit: cover;
}

.image-cropper button {
    margin-top: 8px;
    font-size: 12px;
    background-color: #17a2b8;
    color: #fff;
    padding: 6px 10px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
}

.image-cropper button:hover {
    background-color: #138496;
}

/* Variant Table */
.variant-table {
    width: 100%;
    margin-top: 15px;
    border-collapse: collapse;
}

.variant-table th,
.variant-table td {
    padding: 8px;
    text-align: center;
    font-size: 13px;
}

.variant-table th {
    background-color: #f1f1f1;
}

.variant-table td button {
    font-size: 12px;
    padding: 5px 10px;
    border: 1px solid #ddd;
    border-radius: 6px;
    background-color: #e9ecef;
    cursor: pointer;
}

.variant-table td button:hover {
    background-color: #007bff;
    color: white;
}

/* Submit Button */
.btn-info {
    font-size: 14px;
    padding: 8px 15px;
    background-color: #17a2b8;
    color: #fff;
    border-radius: 6px;
    border: none;
    transition: background-color 0.3s;
    cursor: pointer;
}

.btn-info:hover {
    background-color: #138496;
}

/* Flex Layout for Variants */
.row.gx-3.mb-3 {
    margin-bottom: 12px;
}

/* Alignment for Buttons */
.d-flex.justify-content-end {
    justify-content: flex-end;
}

/* File Upload */
input[type="file"].form-control {
    padding: 10px;
    height: 40px;
    width: 400px;
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 3px;
    margin-left: 30px;
 }

 </style>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header mb-5 mt-5">
                    <h2 class="content-title container-fluid">Add New Product</h2>
                </div>
            </div>
            <div class="container-fluid w-75 col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/add-products" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for (let i = 0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i]._id %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Add Variants</label>
                                <div class="row gx-3 mb-3">
                                    <!-- Color -->
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label for="variantColor">Color:</label>
                                            <input type="text" id="variantColor" class="form-control" placeholder="Enter color" />
                                            <div id="color-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <!-- Size -->
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label for="variantSize">Size:</label>
                                            <input type="text" id="variantSize" class="form-control" placeholder="Enter size" />
                                            <div id="size-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <!-- Stock -->
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label for="variantStock">Stock:</label>
                                            <input type="number" id="variantStock" class="form-control" placeholder="Enter stock" />
                                            <div id="stock-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row gx-3 mb-3">
                                    <!-- Regular Price -->
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label for="variantRegularPrice">Regular Price:</label>
                                            <input type="text" name="regularPrice" id="variantRegularPrice" class="form-control" placeholder="Enter regular price" />
                                            <div id="regularPrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <!-- Sale Price -->
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label for="variantSalePrice">Sale Price:</label>
                                            <input type="text" id="variantSalePrice" class="form-control" placeholder="Enter sale price" />
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-primary" onclick="addVariant()">Add Variant</button>
                                </div>
                                <table class="variant-table">
                                    <thead>
                                        <tr>
                                            <th>Color</th>
                                            <th>Size</th>
                                            <th>Stock</th>
                                            <th>Regular Price</th>
                                            <th>Sale Price</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="variantTableBody"></tbody>
                                </table>
                                <input type="hidden" name="variants" id="variantData">
                                <div id="variant-error" class="error-message"></div>
                            </div>
                            
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose image</h4>
                                </div>
                                <div class="border row ms-0 w-100">
                                    <div id="addedimageContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center " style="margin-bottom: 20px;">
                                        <img src="" class="" alt="" id="imgView1">
                                        <input class="form-control" type="file" name="image" id="input1"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage1(event), viewImage(event, 1)">
                                        <div id="image-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center">
                                        <img src="" id="croppedImg1" alt="">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">


                                        <input class="form-control" type="file" name="image" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">


                                        <input class="form-control" type="file" name="image" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">



                                        <input class="form-control" type="file" name="image" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                            </div>
                    </div>
                    <div>
                        <button class="btn btn-info btn-md rounded font-sm hover-up" type="submit"
                            onclick="validateAndSubmit()">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <script>

        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit()
            }
        }

        let variants = []; // Declare the variants array globally

function addVariant() {
    const color = document.getElementById("variantColor").value.trim();
    const size = document.getElementById("variantSize").value.trim();
    const stock = parseInt(document.getElementById("variantStock").value.trim());
    const regularPrice = parseFloat(document.getElementById("variantRegularPrice").value.trim());
    const salePrice = parseFloat(document.getElementById("variantSalePrice").value.trim());

    // Check for valid input values
    if (!color || !size || isNaN(stock) || stock <= 0 || isNaN(regularPrice) || regularPrice <= 0 || isNaN(salePrice) || salePrice < 0) {
        Swal.fire({ title: "Error!", text: "Please fill in all variant details with valid values.", icon: "error", confirmButtonText: "Okay" });
        return;
    }

    // Check if the limit has been reached
    const variantLimit = 4; // Set the maximum number of variants allowed
    if (variants.length >= variantLimit) {
        Swal.fire({ title: "Error!", text: `You can only add up to ${variantLimit} variants.`, icon: "error", confirmButtonText: "Okay" });
        return;
    }

    // Add the new variant
    variants.push({ color, size, stock, regularPrice, salePrice });

    // Update the hidden input field
    document.getElementById("variantData").value = JSON.stringify(variants);

    // Add the new variant to the table
    const tableBody = document.getElementById("variantTableBody");
    const row = document.createElement("tr");
    row.setAttribute("data-index", variants.length - 1); // Assign the index to the row for removal
    row.innerHTML = `<td>${color}</td>
                     <td>${size}</td>
                     <td>${stock}</td>
                     <td>${regularPrice}</td>
                     <td>${salePrice}</td>
                     <td><button type="button" class="btn btn-danger btn-sm" onclick="removeVariant(${variants.length - 1})">Remove</button></td>`;
    tableBody.appendChild(row);

    // Clear input fields
    document.getElementById("variantColor").value = "";
    document.getElementById("variantSize").value = "";
    document.getElementById("variantStock").value = "";
    document.getElementById("variantRegularPrice").value = "";
    document.getElementById("variantSalePrice").value = "";
}

// Remove variant from table and array
function removeVariant(index) {
    variants.splice(index, 1);
    document.getElementById("variantData").value = JSON.stringify(variants);

    const row = document.getElementById("variantTableBody").children[index];
    row.remove();
}

        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage(event, index) {
                   let input = event.target;
                   let reader = new FileReader();
                   reader.onload = function () {
                       let dataURL = reader.result;
                       let image = document.getElementById('imgView' + index);
                       image.src = dataURL;
                       let cropper = new Cropper(image, {
                           aspectRatio: 1,
                           viewMode: 1,
                           guides: true,
                           background: false,
                           autoCropArea: 1,
                           zoomable: true
                       });
                       let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                       cropperContainer.style.display = 'block';

                       let saveButton = document.querySelector('#saveButton' + index);
                       saveButton.addEventListener('click', async function () {
                           let croppedCanvas = cropper.getCroppedCanvas();
                           let croppedImage = document.getElementById("croppedImg" + index);
                           croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                           let timestamp = new Date().getTime();
                           let fileName = `cropped-img-${timestamp}-${index}.png`;
                           await croppedCanvas.toBlob(blob => {
                               let input = document.getElementById('input' + index);
                               let imgFile = new File([blob], fileName, blob)
                               const fileList = new DataTransfer();
                               fileList.items.add(imgFile);
                               input.files = fileList.files
                           });
                           cropperContainer.style.display = 'none';
                       });
                   };
                   reader.readAsDataURL(input.files[0]);
               }
        const selectedImages = [];

        const inputIds = ['input1', 'input2', 'input3', 'input4'];
        inputIds.forEach(id => {
  document.getElementById(id).addEventListener("change", handleFileSelect);
});
function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;

    const category = document.getElementsByName('category')[0].value;
    let isValid = true;

    if (name.trim() === "" || !/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage('productName-error', 'Please enter a valid product name with alphabetic characters.');
        isValid = false;
    }

    if (description.trim() === "" || description.trim().length < 10) {
        displayErrorMessage('description-error', 'Description should be at least 10 characters.');
        isValid = false;
    }

 


    return isValid;


name.addEventListener('blur',validateForm)
description.addEventListener('blur',validateForm)
price.addEventListener('blur',validateForm)
salePrice.addEventListener('blur',validateForm)
color.addEventListener('blur',validateForm)
stock.addEventListener('blur',validateForm)

}



function handleFileSelect(event) {
    const addImagesContainer = document.getElementById("addedimageContainer");
    const files = Array.from(event.target.files);

    files.forEach(file => {
        if (!selectedImages.includes(file)) {
            selectedImages.push(file);

            // Create thumbnail element
            const thumbnail = document.createElement("div");
            thumbnail.classList.add("thumbnail");

            // Create image element
            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";

            // Create remove icon
            const removeIcon = document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.textContent = "×";
            removeIcon.onclick = function() {
                removeThumbnail(thumbnail, file);
            };

            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addImagesContainer.appendChild(thumbnail);
        }
    });
}

function removeThumbnail(thumbnail, file) {
    const index = selectedImages.indexOf(file);
    if (index > -1) {
        selectedImages.splice(index, 1);
        thumbnail.remove();
    }
}


        function displayErrorMessage(elementId, message) {
            let errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');


        }



    </script>

    <%- include("../../views/partials/admin/footer") %>