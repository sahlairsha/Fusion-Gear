<%- include("../../views/partials/admin/header") %>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
        integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        /* Container for the form */
        .container {
            width: 90%;
            margin-left: 50px;
            padding-left: 10px;
            overflow-x: hidden;

        }

        .publish-btn {
            border-radius: 20px;
            background-color: #9FEEA7;
            color: #000;
            font-weight: 500;
            width: 100px;
        }

        /* Adjust grid layout for the form */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-gap: 20px;
            align-items: start;
            overflow: hidden;
        }

        /* Add margin between the variant table and other sections */
        .variant-tablev {
            margin-top: 20px;
            border: 1px solid #ddd;
            width: 100%;
            border-collapse: collapse;
        }

        .variant-tablev th,
        .variant-tablev td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .variant-tablev th {
            background-color: #f8f9fa;
            font-weight: bold;
        }

        .add-variant-btn {
            margin-top: 15px;
        }

        /* Place the category section to the right side */
        .category-section {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: start;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f8f9fa;
            margin-top: 20px;
        }

        /* Adjust spacing for the category dropdown */
        .category-section .form-label {
            margin-bottom: 5px;
        }

        .form-label {
            font-weight: 500;
        }

        .category-section select {
            width: 100%;
            max-width: 200px;
            padding: 8px;
            border-radius: 5px;
        }

        /* Other styles (no change) */
        .form-control {
            font-size: 13px;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ddd;
            width: 100%;
            margin: 5px;
        }

        .file-input-container {
            position: relative;
            width: 100px;
            height: 100px;
            margin: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 1px dashed #ccc;
            border-radius: 5px;
            overflow: hidden;
            cursor: pointer;
        }

        .file-input-container input {
            opacity: 0;
            position: absolute;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .add-icon {
            font-size: 40px;
            color: #ccc;
            font-weight: bold;
            text-align: center;
        }

        /* Thumbnail Container */
        .thumbnail-container {
            display: none;
            position: relative;
            width: 180px;
            height: 180px;
            margin-top: 10px;
            margin-left: 22px;
        }

        .thumbnail-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 5px;
        }

        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.6);
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 16px;
            width: 25px;
            height: 25px;
            text-align: center;
            cursor: pointer;
        }

        .remove-btn:hover {
            background-color: rgba(255, 0, 0, 0.8);
        }

        .crop-btn {
            position: absolute;
            bottom: 5px;
            left: 5px;
            background-color: rgba(0, 255, 0, 0.6);
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            padding: 5px;
            width: 150px;
            height: 30px;
            cursor: pointer;
        }

        .crop-btn:hover {
            background-color: rgba(0, 255, 0, 0.8);
        }

        /* Crop Modal */
        .crop-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            align-items: center;
            justify-content: center;
            z-index: 9999;
            padding: 20px;
        }

        .crop-modal-content {
            background: white;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            max-width: 600px;
            text-align: center;
            position: relative;
        }

        .crop-container {
            width: 100%;
            height: 300px;
            /* Adjustable height */
            margin-bottom: 20px;
        }

        #cropImage {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .modal-footer {
            display: flex;
            justify-content: space-between;
        }

        .btn-sm {
            padding: 10px;
            font-size: 14px;
        }

        .btn-primary {
            background-color: #007bff;
            border: 1px solid #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .btn-secondary {
            background-color: #6c757d;
            border: 1px solid #6c757d;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
    </style>

    <section class="content-main">
        <div class="row">
            <% if(flash.error){ %>
                <div class="alert alert-danger" role="alert">
                    <%= flash.error %>
                </div>
                <% } %>
                    <div class="col-9">
                        <div class="content-header mt-3 ms-3">
                            <h3 class="content-title container-fluid">Add New Product</h2>
                        </div>
                    </div>
                    <div class="container col-lg-6">
                        <div class="card mb-4">
                            <div class="card-body">
                                <h6>General Informations</h6>
                                <form method="post" action="/admin/add-products" enctype="multipart/form-data"
                                    onsubmit="return validateForm()">
                                    <div class="form-grid">
                                        <!-- Left Side - Form Fields -->
                                        <div class="form-section">
                                            <div class="mb-4">
                                                <label for="product_name" class="form-label">Product Name</label>
                                                <input type="text" placeholder="Type here" name="productName"
                                                    class="form-control border" id="product_name">
                                                <div id="productName-error" class="error-message"></div>
                                            </div>


                                            <div class="mb-4">
                                                <label class="form-label">Full description</label>
                                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                                    class="form-control border" rows="4"></textarea>
                                                <div id="description-error" class="error-message"></div>
                                            </div>

                                            <!-- Add Variants Section -->
                                            <div class="mb-2">
                                                <label class="form-label">Add Variants</label>
                                                <div class="row gx-3 mb-3">
                                                    <!-- Color -->
                                                    <div class="col-sm-4">
                                                        <div class="form-group">
                                                            <label for="variantColor">Color:</label>
                                                            <input type="text" id="variantColor" class="form-control"
                                                                placeholder="Enter color" />
                                                            <div id="color-error" class="error-message"></div>
                                                        </div>
                                                    </div>
                                                    <!-- Size -->
                                                    <div class="col-sm-4">
                                                        <div class="form-group">
                                                            <label for="variantSize">Size:</label>
                                                            <input type="text" id="variantSize" class="form-control"
                                                                placeholder="Enter size" />
                                                            <div id="size-error" class="error-message"></div>
                                                        </div>
                                                    </div>
                                                    <!-- Stock -->
                                                    <div class="col-sm-4">
                                                        <div class="form-group">
                                                            <label for="variantStock">Stock:</label>
                                                            <input type="number" id="variantStock" class="form-control"
                                                                placeholder="Enter stock" />
                                                            <div id="stock-error" class="error-message"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row gx-3 mb-3">
                                                    <!-- Regular Price -->
                                                    <div class="col-sm-6">
                                                        <div class="form-group">
                                                            <label for="variantRegularPrice">Regular Price:</label>
                                                            <input type="text" name="regularPrice"
                                                                id="variantRegularPrice" class="form-control"
                                                                placeholder="Enter regular price" />
                                                            <div id="regularPrice-error" class="error-message"></div>
                                                        </div>
                                                    </div>
                                                    <!-- Sale Price -->
                                                    <div class="col-sm-6">
                                                        <div class="form-group">
                                                            <label for="variantSalePrice">Sale Price:</label>
                                                            <input type="text" id="variantSalePrice"
                                                                class="form-control" placeholder="Enter sale price" />
                                                            <div id="salePrice-error" class="error-message"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="d-flex justify-content-end add-variant-btn">
                                                    <button type="button" class="btn btn-primary"
                                                        onclick="addVariant()">Add
                                                        Variant</button>
                                                </div>

                                            </div>

                                            <div class="mb-2">
                                                <label class="form-label">Product Offer</label>
                                                <br>
                                                <label for="productOffer" class="form-label">Discount(%)</label>
                                                <input type="text" placeholder="Type here" name="discountPercentage"
                                                    class="form-control border" id="productOffer">
                                                <div id="productOffer-error" class="error-message"></div>
                                            </div>
                                            <div class="mb-2">
                                                <label for="offer_start" class="form-label">Start Date</label>
                                                <input type="date" name="startDate" class="form-control border"
                                                    id="offer_start">
                                                <div id="startDate-error" class="error-message"></div>
                                            </div>
                                            <div class="mb-2">

                                                <label for="offer_end" class="form-label">End Date</label>
                                                <input type="date" placeholder="Type here" name="endDate"
                                                    class="form-control border" id="offer_end">
                                                <div id="endDate-error" class="error-message"></div>
                                            </div>

                                        </div>

                                        <div class="card mb-2">
                                            <div class="card-header">
                                                <h4>Upload images</h4>
                                            </div>
                                            <div class="border row ms-0 w-100">
                                                <div id="addedimageContainer" class="thumbnails-container"></div>
                                            </div>
                                        
                                            <!-- Image Input Fields (Repeatable for each input) -->
                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <label for="input1" class="file-input-container">
                                                        <span class="add-icon">+</span>
                                                        <input class="form-control" type="file" name="image" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)" hidden>
                                                    </label>
                                                    <div id="image-error1" class="error-message"></div>
                                                    <div id="thumbnailContainer1" class="thumbnail-container" style="display: none;">
                                                        <img id="imgThumbnail1" src="" alt="" class="thumbnail-img">
                                                        <button type="button" class="remove-btn" onclick="removeThumbnail(1)">×</button>
                                                        <button type="button" class="crop-btn" onclick="openCropModal(1)">Crop</button>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <label for="input2" class="file-input-container">
                                                        <span class="add-icon">+</span>
                                                        <input class="form-control" type="file" name="image" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)" hidden>
                                                    </label>
                                                    <div id="image-error2" class="error-message"></div>
                                                    <div id="thumbnailContainer2" class="thumbnail-container" style="display: none;">
                                                        <img id="imgThumbnail2" src="" alt="" class="thumbnail-img">
                                                        <button type="button" class="remove-btn" onclick="removeThumbnail(2)">×</button>
                                                        <button type="button" class="crop-btn" onclick="openCropModal(2)">Crop</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <label for="input3" class="file-input-container">
                                                        <span class="add-icon">+</span>
                                                        <input class="form-control" type="file" name="image" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)" hidden>
                                                    </label>
                                                    <div id="image-error3" class="error-message"></div>
                                                    <div id="thumbnailContainer3" class="thumbnail-container" style="display: none;">
                                                        <img id="imgThumbnail3" src="" alt="" class="thumbnail-img">
                                                        <button type="button" class="remove-btn" onclick="removeThumbnail(3)">×</button>
                                                        <button type="button" class="crop-btn" onclick="openCropModal(3)">Crop</button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                    <label for="input4" class="file-input-container">
                                                        <span class="add-icon">+</span>
                                                        <input class="form-control" type="file" name="image" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)" hidden>
                                                    </label>
                                                    <div id="image-error4" class="error-message"></div>
                                                    <div id="thumbnailContainer4" class="thumbnail-container" style="display: none;">
                                                        <img id="imgThumbnail4" src="" alt="" class="thumbnail-img">
                                                        <button type="button" class="remove-btn" onclick="removeThumbnail(4)">×</button>
                                                        <button type="button" class="crop-btn" onclick="openCropModal(4)">Crop</button>
                                                    </div>
                                                </div>
                                            </div>
                                         
                                            
                                            <!-- Modal for Cropping -->
                                            <div id="cropModal" class="crop-modal">
                                                <div class="crop-modal-content">
                                                    <h4>Crop Image</h4>
                                                    <div class="crop-container">
                                                        <img id="cropImage" src="" alt="Crop Image">
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" id="saveCropBtn" class="btn-sm btn-primary">Save Crop</button>
                                                        <button type="button" class="btn-sm btn-secondary" onclick="closeCropModal()">Cancel</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                        <div class="category-section">
                            <label class="form-label">Category</label>
                            <select class="form-select border" name="category">
                                <% for (let i=0; i < cat.length; i++) { %>
                                    <option value="<%= cat[i]._id %>">
                                        <%= cat[i].name %>
                                    </option>
                                    <% } %>
                            </select>
                        </div>
                        <table class="variant-tablev">
                            <thead>
                                <tr>
                                    <th>Color</th>
                                    <th>Size</th>
                                    <th>Stock</th>
                                    <th>Regular Price</th>
                                    <th>Sale Price</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="variantTableBody"></tbody>
                        </table>
                        <input type="hidden" name="variants" id="variantData">
                        <div id="variant-error" class="error-message"></div>
                    </div>


        </div>

        <div>
            <button class="btn publish-btn" type="submit" onclick="validateAndSubmit()">Publish</button>
        </div>
        </form>
        </div>
        </div>
        </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <script>

        function validateAndSubmit() {
            if (validateForm()) {

                document.forms[0].submit();


            }
        }

        let variants = []; // Declare the variants array globally

        function addVariant() {
            const color = document.getElementById("variantColor").value.trim();
            const size = document.getElementById("variantSize").value.trim();
            const stock = parseInt(document.getElementById("variantStock").value.trim());
            const regularPrice = parseFloat(document.getElementById("variantRegularPrice").value.trim());
            const salePrice = parseFloat(document.getElementById("variantSalePrice").value.trim());

            // Check for valid input values
            if (!color || !size || isNaN(stock) || stock <= 0 || isNaN(regularPrice) || regularPrice <= 0 || isNaN(salePrice) || salePrice < 0) {
                Swal.fire({ title: "Error!", text: "Please fill in all variant details with valid values.", icon: "error", confirmButtonText: "Okay" });
                return;
            }

            if (isNaN(regularPrice) < isNaN(salePrice)) {
                Swal.fire({ title: "Error!", text: "Regular price should be greater than sale price.", icon: "error", confirmButtonText: "Okay" });
                return;
            }

            // Check if the limit has been reached
            const variantLimit = 4;
            if (variants.length >= variantLimit) {
                Swal.fire({ title: "Error!", text: `You can only add up to ${variantLimit} variants.`, icon: "error", confirmButtonText: "Okay" });
                return;
            }

            // Add the new variant
            variants.push({ color, size, stock, regularPrice, salePrice });

            // Update the hidden input field
            document.getElementById("variantData").value = JSON.stringify(variants);

            // Add the new variant to the table
            const tableBody = document.getElementById("variantTableBody");
            const row = document.createElement("tr");
            row.setAttribute("data-index", variants.length - 1); // Assign the index to the row for removal
            row.innerHTML = `<td>${color}</td>
                     <td>${size}</td>
                     <td>${stock}</td>
                     <td>${regularPrice}</td>
                     <td>${salePrice}</td>
                     <td><button type="button" class="btn btn-danger btn-sm" onclick="removeVariant(${variants.length - 1})">Remove</button></td>`;
            tableBody.appendChild(row);

            // Clear input fields
            document.getElementById("variantColor").value = "";
            document.getElementById("variantSize").value = "";
            document.getElementById("variantStock").value = "";
            document.getElementById("variantRegularPrice").value = "";
            document.getElementById("variantSalePrice").value = "";
        }
        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }

        let cropperInstances = {}; // Object to store unique cropper instances for each image input

// View Image Function (for multiple inputs)
function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();

    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgThumbnail' + index);
        image.src = dataURL;

        // Show the thumbnail container after the image is loaded
        document.getElementById('thumbnailContainer' + index).style.display = 'block';
    };
    reader.readAsDataURL(input.files[0]);
}

// Remove Thumbnail
function removeThumbnail(index) {
    // Hide the thumbnail container and reset the image source
    document.getElementById('thumbnailContainer' + index).style.display = 'none';
    document.getElementById('imgThumbnail' + index).src = '';
    document.getElementById('input' + index).value = ''; // Clear the input field
}

// Open Crop Modal for a specific image input
function openCropModal(index) {
    // Get the selected image for cropping
    const imageSrc = document.getElementById('imgThumbnail' + index).src;
    document.getElementById('cropImage').src = imageSrc;

    // Show the crop modal
    document.getElementById('cropModal').style.display = 'flex';

    // Destroy any existing cropper instance for this index
    if (cropperInstances[index]) {
        cropperInstances[index].destroy();
    }

    // Initialize a new cropper instance for the specific image
    cropperInstances[index] = new Cropper(document.getElementById('cropImage'), {
        aspectRatio: 1,  // Example aspect ratio, adjust as needed
        viewMode: 1,
        guides: true,
        background: false,
        autoCropArea: 1,
        zoomable: true,
    });

    // Save cropped image
    document.getElementById('saveCropBtn').addEventListener('click', function () {
        const croppedCanvas = cropperInstances[index].getCroppedCanvas();
        const croppedImage = croppedCanvas.toDataURL('image/jpeg');

        // Update the corresponding thumbnail with the cropped image
        document.getElementById('imgThumbnail' + index).src = croppedImage;

        // Optionally upload the cropped image
        uploadCroppedImage(croppedCanvas, index);

        // Close the modal after saving
        closeCropModal();
    });
}

// Upload the cropped image (optional, if needed)
function uploadCroppedImage(croppedCanvas, index) {
    croppedCanvas.toBlob(function (blob) {
        const formData = new FormData();
        formData.append('image', blob, 'cropped-image-' + index + '.jpg');  // Unique filename

        // Upload the cropped image to the server (if needed)
        fetch('/admin/add-products', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            console.log('Cropped image uploaded:', data);
        })
        .catch(error => {
            console.error('Error uploading cropped image:', error);
        });
    });
}

// Close Crop Modal and Cleanup
function closeCropModal() {
    document.getElementById('cropModal').style.display = 'none';
    document.getElementById('cropImage').src = ''; // Clear the modal image

    // Clean up the cropper instance when closing the modal
    Object.keys(cropperInstances).forEach(index => {
        if (cropperInstances[index]) {
            cropperInstances[index].destroy();
            cropperInstances[index] = null;
        }
    });
}

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const offer = document.getElementById('productOffer').value
            const startDate = document.getElementById('offer_start').value
            const endDate = document.getElementById('offer_end').value


            const category = document.getElementsByName('category')[0].value;
            let isValid = true;

            if (name.trim() === "" || !/^[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage('productName-error', 'Please enter a valid product name with alphabetic characters.');
                isValid = false;
            }

            if (description.trim() === "" || description.trim().length < 10) {
                displayErrorMessage('description-error', 'Description should be at least 10 characters.');
                isValid = false;
            }

            if (offer.trim() === "" || offer < 0) {
                displayErrorMessage('productOffer-error', 'Offer should be a positive number.');
                isValid = false;
            } else if (isNaN(offer) || offer <= 0 || offer > 100) {
                displayErrorMessage('productOffer-error', 'Offer should be a positive number between 0 and 100')
                isValid = false;
            }

            if (startDate.trim() === "") {
                displayErrorMessage('startDate-error', 'Please select a start date.');
                isValid = false;
            }

            if (endDate.trim() === "") {
                displayErrorMessage('endDate-error', 'Please select an end date.');
                isValid = false;
            } else if (startDate && new Date(endDate) <= new Date(startDate)) {
                displayErrorMessage('endDate-error', 'Start date should be before end date.');
                isValid = false;
            }

            const imageInputs = ['input1', 'input2', 'input3', 'input4'];
            let imageUploaded = false;
        
            imageInputs.forEach(function (inputId) {
                const fileInput = document.getElementById(inputId);
                const file = fileInput.files[0];
        
                if (file) {
                    imageUploaded = true;
                }
            });
        
            // If no image is uploaded, show an error
            if (!imageUploaded) {
                displayErrorMessage('image-error', 'You should upload at least one image.');
                isValid = false;
            }

            return isValid;


            name.addEventListener('blur', validateForm)
            description.addEventListener('blur', validateForm)
            offer.addEventListener('blur', validateForm)



        }

        function displayErrorMessage(elementId, message) {
            let errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
            const errorMessage = document.getElementById('errorMessage');
            // Clear image error message
            const imageErrorElement = document.getElementById('image-error');
            imageErrorElement.innerText = '';
            imageErrorElement.style.display = 'none';


        }


    </script>

    <%- include("../../views/partials/admin/footer") %>