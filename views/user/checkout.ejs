<%- include('../../views/partials/user/header') %>

<style>
    /* Add your existing CSS styles here */
    #addressFormContainer {
        display: none;
        margin-top: 20px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #ffff;
    }

    #showFormBtn + #addressFormContainer {
        display: block;
    }

    input[type="text"] {
        width: 400px;
        height: 50px;
       
        margin-bottom: 20px;
        padding-left: 20px;
        border: 1px solid #0000002a;
        border-radius: 4px;
    }

    label {
        padding-top: 20px;
        padding-bottom: 5px;
        font-weight: 600;
    }

    .list-group {
        border-radius: 4px;
    }

    .model-form {
        margin-top: 50px;
    }

    h6 {
        font-weight: 600;
    }

    .checkout__form {
        display: flex;
        justify-content: space-between;
    }

    .col-lg-8 {
        flex: 0 0 60%;
        max-width: 60%;
    }

    .col-lg-4 {
        flex: 0 0 35%;
        max-width: 35%;
        position: relative;
        right: 0;
    }

    .more-options {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .more-options .btn {
        padding: 0;
        background: transparent;
        border: none;
        cursor: pointer;
        color: inherit;
    }

    .more-options i {
        color: #333;
    }

    .more-options .btn:hover i {
        color: #000;
    }

    .dropdown-list {
        display: none;
        position: absolute;
        right: 0;
        top: 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
        width: 100px;
        z-index: 10;
    }

    .more-options:hover .dropdown-list {
        display: block;
    }

    .dropdown-item {
        padding: 8px 12px;
        text-decoration: none;
        color: #333;
        cursor: pointer;
        display: block;
        font-size: 14px;
    }

    .dropdown-item:hover {
        background-color: #f0f0f0;
        color: rgba(0, 0, 255, 0.616);
    }

    .order-details-box {
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
        width: 100%;
        margin-top: 40px;
    }

    .order-summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .order-summary-item p {
        margin: 0;
        font-size: 16px;
        color: #333;
    }

    .save-address {
        background-color: #000;
        color: #fff;
        margin-top: 10px;
    }

    .save-address:hover {
        border: 1px solid #000;
        background-color: #fff;
        color: #000;
    }
</style>

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/products">Product</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="checkout spad">
    <div class="container-checkout">
        <div class="checkout__form d-flex justify-content-between">
            <!-- Left Section: Address List -->
            <div class="col-lg-8">
                <% if (address.length === 0 || !address.some(doc => doc.address.length > 0)) { %>
                    <div class="text-center">
                        <p class="fs-4">There is no address available. <br> <button class="save-address btn" id="showFormBtn">Add New Address</button></p>
                    </div>
                <% } else { %>
                    <!-- Display existing addresses -->
                    <h3 class="mb-4">Your Addresses</h3>
                    <ul class="list-group mb-4">
                        <% address.forEach(function(doc) { %>
                            <% doc.address.forEach(function(addr) { %>
                                <li class="list-group-item">
                                    <input type="radio" name="selectedAddress" value="<%= addr._id %>">
                                    <h6><%= addr.recipient_name %>
                                        <% if (addr.addressType) { %>
                                            <span class="badge badge-warning mb-2"><%=addr.addressType%></span>
                                        <% } %>
                                    </h4>
                                    <strong><%= addr.streetAddress %>, <%= addr.city %>, <%= addr.state %></strong><br>
                                    Pincode: <%= addr.pincode %> <br>
                                    Landmark: <%= addr.landMark || 'N/A' %><br>
                                    <span class="text-muted">Phone: <%= addr.phone || 'N/A' %></span>
                                    <div class="more-options">
                                    <button class="btn btn-link"><i class="fa-solid fa-ellipsis-vertical"></i></button>
                                    <div class="dropdown-list">
                                      <ul>
                                      <li><a href="#" class="dropdown-item edit-address" data-id="<%= addr._id %>">Edit</a>
                                     </ul>
                                    </div>
                                    </div>
                                </li>
                            <% }); %>
                        <% }); %>
                    </ul>
                    <button class="save-address btn" id="showFormBtn">Add New Address</button>
                <% } %>

                <button id="continueWithAddress" type="submit"  class="btn btn-dark mt-3 mb-1">
                    Continue
                </button>
            
                <!-- Address Form (Initially Hidden) -->
                <div class="mt-5" id="addressFormContainer" style="display: none;">
                    <h2 class="mb-4">Add New Address</h2>
                    <form id="addressForm" action="/address-view" method="post">
                      <input type="hidden" id="actionType" name="actionType" value="add">
            
                        <div class="mb-3">
                            <label for="name" class="form-label">Name<span class="text-danger">*</span> </label>
                            <input type="text" class="form-control" id="recipient_name" name="recipient_name">
                            <div id="error1" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="streetAddress" class="form-label">Street Address <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="streetAddress" name="streetAddress">
                            <div id="error2" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="city" class="form-label">City <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="city" name="city">
                            <div id="error3" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="state" class="form-label">State <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="state" name="state">
                            <div id="error4" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="landMark" class="form-label">Landmark (Optional)</label>
                            <input type="text" class="form-control" id="landMark" name="landMark">
                        </div>
                        <div class="mb-3">
                            <label for="pincode" class="form-label">Pincode <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="pincode" name="pincode">
                            <div id="error5" class="error-message"></div>
                        </div>
            
                        <div class="mb-3">
                            <label for="Phone" class="form-label">Phone No <span class="text-danger">*</span></label>
                            <input type="tel" class="form-control" id="phone" name="phone"  placeholder="10-digit phone number">
                            <div id="error6" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="altPhone" class="form-label">Alternate Phone (Optional)</label>
                            <input type="tel" class="form-control" id="altPhone" name="altPhone"  placeholder="10-digit phone number">
                        </div>
            
                        <div class="mb-3">
                            <label class="form-label">Address Type <span class="text-danger">*</span></label><br>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input mt-3" type="radio" name="addressType" id="home" value="Home">
                                <label class="form-check-label" for="home">Home</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input mt-3" type="radio" name="addressType" id="work" value="Work">
                                <label class="form-check-label" for="work">Work</label>
                            </div>
                            <div id="error7" class="error-message"></div>
                        </div>
            
                        <button type="submit" id="submit-btn" class="save-address btn">Add Address</button>
                    </form>
                    </div>
                </div>

                  <!-- Right Section: Order Details -->
            <div class="col-lg-4">
                <div class="order-details-box">
                    <h6>Order Summary</h6>
                    <div class="order-summary-item">
                        <p>Items:</p>
                        <p>
                            <%= cartCount %> items
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Subtotal:</p>
                        <p>
                            <%= cartTotal %>
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Shipping:</p>
                        <p>
                            <%= shippingCharges %>
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Total:</p>
                        <p>
                            <%= netAmount %>
                        </p>
                    </div>
                </div>
            </div>
          
            </div>
        </div>
    </div>
</section>

<script>


const addressForm = document.getElementById('addressFormContainer')
const recipient_name = document.getElementById('recipient_name')
const streetAddress = document.getElementById('streetAddress')
const city = document.getElementById('city')
const state = document.getElementById('state')
const pincode = document.getElementById('pincode')
const phone = document.getElementById('phone');

const err1 = document.getElementById('error1')
const err2 = document.getElementById('error2')
const err3 = document.getElementById('error3')
const err4 = document.getElementById('error4')
const err5 = document.getElementById('error5')
const err6 = document.getElementById('error6')


const addressTypeInputs = document.getElementsByName('addressType');
const err7 = document.getElementById('error7');

function addressTypeValidation() {
const addressTypeInputsArray = Array.from(addressTypeInputs);
const isSelected = Array.isArray(addressTypeInputsArray) && addressTypeInputsArray.some(input => input.checked);

if (!isSelected) {
    err7.innerText = "Please select an address type";
} else {
    err7.innerText = "";
}
}

addressTypeInputs.forEach(input => input.addEventListener('change', addressTypeValidation));


function nameValidation(){
const nameVal = recipient_name.value.trim();
const namePattern = /^[a-zA-Z\s]{2,50}$/;
if (nameVal === "") {
    err1.innerText = "Please enter the full name";
} else if (!namePattern.test(nameVal)) {
    err1.innerText = "Name can only contain alphabets and spaces";
} else {
    err1.innerText = "";
}
}

recipient_name.addEventListener('blur',nameValidation)
streetAddress.addEventListener('blur',addressValidation)
city.addEventListener('blur',addressValidation)
state.addEventListener('blur',addressValidation)
pincode.addEventListener('blur',addressValidation)
phone.addEventListener('blur',addressValidation)
altPhone.addEventListener('blur',addressValidation)

function addressValidation(){
const streetVal = streetAddress.value.trim()
const cityVal = city.value.trim();
const stateVal = state.value.trim();
const pincodeVal = pincode.value.trim();
const phoneVal = phone.value.trim()
const phonePattern = /^(\+\d{1,3}[- ]?)?\d{10}$/;
const pincodePattern = /^\d{6}$/;
const allZero = /^0+$/;



if (streetVal === "") {
    err2.innerText = "Please enter street address";
} else {
    err2.innerText = "";
}

if (cityVal === "") {
    err3.innerText = "Please enter city";
} else {
    err3.innerText = "";
}

if (stateVal === "") {
    err4.innerText = "Please enter state";
} else {
    err4.innerText = "";
}

if (!pincodePattern.test(pincodeVal)) {
    err5.innerText = "Enter a valid 6-digit pincode";
} else if(allZero.test(pincodeVal)){
    err5.innerText = "Pincode cannot be all zeros!";
}else {
    err5.innerText = "";
}

if (allZero.test(phoneVal)) {
    err6.innerText = "Phone number cannot be all zeros!";
} else if (!phonePattern.test(phoneVal)) {
    err6.innerText = "Enter a valid phone number";
} else {
    err6.innerText = "";
}


}
document.getElementById('addressForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  // Perform validation
  nameValidation();
  addressValidation();
  addressTypeValidation();

  const hasError = [err1, err2, err3, err4, err5, err6, err7].some(err => err.innerText !== "");
  if (hasError) {
    return;
  }

  const actionType = document.getElementById('actionType').value;
  const addressId = actionType === 'update' ? document.getElementById('addressId').value : null;
  const addressTypeElement = document.querySelector('input[name="addressType"]:checked');
  const addressType = addressTypeElement ? addressTypeElement.value : null;

  const addressData = {
    recipient_name: document.getElementById('recipient_name').value.trim(),
    streetAddress: document.getElementById('streetAddress').value.trim(),
    city: document.getElementById('city').value.trim(),
    state: document.getElementById('state').value.trim(),
    landMark: document.getElementById('landMark').value.trim(),
    pincode: document.getElementById('pincode').value.trim(),
    phone: document.getElementById('phone').value.trim(),
    altPhone: document.getElementById('altPhone').value.trim(),
    addressType: addressType,
  };

  const url = actionType === 'update'
    ? `/address-view/update/${addressId}`
    : document.getElementById('addressForm').action;

  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(addressData),
    });

    const responseText = await response.text();
    console.log('Response text:', responseText);

    if (response.ok) {
      const responseData = JSON.parse(responseText);
      Swal.fire({
        title: 'Success!',
        text: responseData.message,
        icon: 'success',
        confirmButtonText: 'OK',
      }).then(() => {
        location.reload();
      });
    } else {
      const errorData = JSON.parse(responseText);
      console.error("Server-side error:", errorData);
      Swal.fire({
        title: 'Error!',
        text: errorData.message || 'Failed to add/update the address. Please try again.',
        icon: 'error',
        confirmButtonText: 'OK',
      });
    }
  } catch (error) {
    console.error("Client-side error:", error);
    Swal.fire({
      title: 'Error!',
      text: 'Something went wrong. Please try again later.',
      icon: 'error',
      confirmButtonText: 'OK',
    });
  }
});

</script>


<script>
        document.getElementById('showFormBtn').addEventListener('click', function() {
        const formContainer = document.getElementById('addressFormContainer');
        formContainer.style.display = (formContainer.style.display === 'none' || formContainer.style.display === '') ? 'block' : 'none';
    });

document.querySelectorAll('.delete-address').forEach((deleteLink) => {
  deleteLink.addEventListener('click', async (e) => {
    e.preventDefault();
    const addressId = e.target.getAttribute('data-id');

    // Show SweetAlert2 confirmation dialog
    const { isConfirmed } = await Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'No, cancel'
    });

    if (isConfirmed) {
      try {
        const response = await fetch(`/address-view/delete/${addressId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
         
          localStorage.setItem('deleteSuccess', 'Address deleted successfully.');

          location.reload(); 
        } else {
         
          localStorage.setItem('deleteError', 'Failed to delete the address. Please try again.');
          location.reload();
        }
      } catch (error) {
    
        console.error("Error:", error);
        localStorage.setItem('deleteError', 'Something went wrong. Please try again later.');
        location.reload();
      }
    }
  });
});

// After page reload, check for success or error message
window.addEventListener('load', () => {
  const successMessage = localStorage.getItem('deleteSuccess');
  const errorMessage = localStorage.getItem('deleteError');

  if (successMessage) {
    Swal.fire({
      title: 'Deleted!',
      text:  successMessage,
      icon: 'success',
      confirmButtonText: 'OK'
    });
    localStorage.removeItem('deleteSuccess');
  } else if (errorMessage) {
    Swal.fire({
      title: 'Error!',
      text: errorMessage,
      icon: 'error',
      confirmButtonText: 'OK'
    });
    localStorage.removeItem('deleteError'); 
  }
});

document.querySelectorAll('.edit-address').forEach((editLink) => {
  editLink.addEventListener('click', async (e) => {
    e.preventDefault();
    const addressId = e.target.getAttribute('data-id');
    try {

        // Fetch the existing address data
  const response = await fetch(`/address-view/edit/${addressId}`);
  console.log('Response Status:', response.status);
  const addressData = await response.json();
  console.log('Address Data:', addressData); 

  if (response.ok) {
    document.getElementById('recipient_name').value = addressData.recipient_name;
    document.getElementById('streetAddress').value = addressData.streetAddress;
    document.getElementById('city').value = addressData.city;
    document.getElementById('state').value = addressData.state;
    document.getElementById('landMark').value = addressData.landMark || '';
    document.getElementById('pincode').value = addressData.pincode;
    document.getElementById('phone').value = addressData.phone;
    document.getElementById('altPhone').value = addressData.altPhone || '';

    // Set the address type (radio button)
    document.querySelectorAll('input[name="addressType"]').forEach((input) => {
      input.checked = input.value === addressData.addressType;
    });

    document.getElementById('addressFormContainer').style.display = 'block';
  document.getElementById('showFormBtn').style.display = "none";
  document.getElementById('submit-btn').innerText = "Update";

  // Ensure the form exists before trying to modify it
  const form = document.getElementById('addressForm');
  if (form) {
    form.action = `/address-view/update/${addressId}`;
    form.method = 'POST';
  } else {
    console.error('Form not found');
  }
  } else {
    Swal.fire({
      title: "Error!",
      text: 'Failed to fetch address data. Please try again.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
  }
} catch (error) {
  console.error('Error:', error);
  Swal.fire({
    title: "Error!",
    text: 'Something went wrong. Please try again later.',
    icon: 'error',
    confirmButtonText: 'OK'
  });
}

  });
});



document.getElementById('continueWithAddress').addEventListener('click', async function () {
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    
    if (!selectedAddress) {
        Swal.fire({
            title: 'Error!',
            text: 'Please select an address before proceeding.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    const addressId = selectedAddress.value;

    try {
        // Send the selected address to the server or navigate to the payment page
        const response = await fetch('/set-selected-address', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ addressId }),
        });

        const responseData = await response.json();
        if (response.ok) {
            window.location.href = '/payment';
        } else {
            Swal.fire({
                title: 'Error!',
                text: responseData.message || 'Failed to select address. Try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error selecting address:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
});


</script>

<%- include('../../views/partials/user/footer') %>
