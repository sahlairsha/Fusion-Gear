<%- include('../../views/partials/user/header') %>

<style>
    .checkout__form {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}
/* Left section: Billing details */
.col-lg-8 {
    flex: 0 0 65%; 
    max-width: 65%;
    margin-bottom: 30px; 
}


.col-lg-4 {
    flex: 0 0 30%; 
    max-width: 30%;
    margin-left: auto; 
    padding-left: 20px;
}
    .order-details-box {
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 4px;
        background-color: #f9f9f9;
        position: relative;
        margin-top: 20px; 
    }

    .order-details-box h6 {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .order-summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .order-summary-item p {
        margin: 0;
    }


    input[type="text"] {
        width: 400px;
        height: 50px;
        margin-bottom: 20px;
        padding-left: 20px;
        border: 1px solid #0000002a;
        border-radius: 4px;
    }

    label {
        padding-top: 20px;
        padding-bottom: 5px;
    }

    .model-form {
        margin-top: 50px;
    }

    h6 {
        font-weight: 600;
    }


    .save-address {
        border: none;
        background-color: black;
        color: white;
        width: 100%;
        padding: 15px;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 20px;
    }

    
    .col-lg-4 {
        padding-left: 30px; 
    }

 
    @media (max-width: 768px) {
        .checkout__form {
        flex-direction: column; 
    }

    .col-lg-8,
    .col-lg-4 {
        flex: 0 0 100%; 
        max-width: 100%;
    }

    .col-lg-4 {
        margin-left: 0; 
        padding-left: 0;
    }

        .order-details-box {
            width: 100%;
            margin-top: 20px;
        }
    }
    
    /* Adjust the dropdown list alignment */
.dropdown-container {
    position: relative;
    width: 500px;
}

.dropdown-button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: #fff;
    cursor: pointer;
    text-align: left;
    width: 100%; /* Full width to align with the container */
    box-sizing: border-box; /* Ensure padding doesn't affect the width */
}

.arrow-icon {
    font-size: 16px;
    transition: transform 0.3s ease;
}

.arrow-icon.up {
    transform: rotate(180deg); /* Rotate the arrow to point up */
}

.dropdown-list {
    position: absolute; /* Position relative to the container */
    top: 100%; /* Place it just below the dropdown button */
    left: 0;
    right: 0;
    z-index: 1000;
    width: 100%; /* Match the width of the dropdown button */
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 4px;
    list-style: none;
    margin: 0;
    padding: 0;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1); /* Add subtle shadow for better visibility */
    max-height: 200px; /* Add scrolling for overflow */
    overflow-y: auto;
}

.dropdown-list li {
    padding: 10px;
    cursor: pointer;
}

.dropdown-list li:hover {
    background-color: #f0f0f0;
}

/* Adjust margins for neighboring buttons */
.edit-address-btn {
    margin-left: 10px;
    border: none;
        background-color: black;
        color: white;
        padding: 10px;
        border-radius: 4px;
        font-weight: 500;
}

</style>

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/products">Product</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="checkout spad">
    <div class="container">
        <div class="checkout__form">
            <form action="#">
                <div class="row">
                    <div class="dropdown-container">
                        <button id="dropdownButton" class="dropdown-button">
                            --select--
                            <span id="dropdownIcon" class="arrow-icon">&#9660;</span> <!-- Down arrow -->
                        </button>
                        <ul id="dropdownList" class="dropdown-list" style="display: none;">
                            <% if (addresses.length > 0) { %>
                                <% addresses.forEach(address => { %>
                                    <li data-value="<%= address._id %>">
                                        <%= address.recipient_name %>, <%= address.streetAddress %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %>
                                    </li>
                                <% }) %>
                            <% } else { %>
                                <li>No saved addresses</li>
                            <% } %>
                        </ul>
                    </div>
                    <button class="edit-address-btn"  id="editAddressBtn">Edit Address</button>

                            <button class="save-address" type="button" id="addNewAddressBtn">Add New Address</button>
                        </div>

                        <!-- Modal form to add or edit address -->
                        <div class="model-form" id="newAddressModal" style="display:none;">
                            <h6 id="modalTitle">Add New Address</h6>
                            <label for="newRecipient">Name<span class="text-danger">*</span></label><br>
                            <input type="text" id="newRecipient" placeholder="Recipient Name">
                            <div id="error1" class="error-message"></div>

                            <label for="newStreet">Street Address<span class="text-danger">*</span></label><br>
                            <input type="text" id="newStreet" placeholder="Street Address">
                            <div id="error2" class="error-message"></div>

                            <label for="newCity">City<span class="text-danger">*</span></label><br>
                            <input type="text" id="newCity" placeholder="City">
                            <div id="error3" class="error-message"></div>

                            <label for="newState">State<span class="text-danger">*</span></label><br>
                            <input type="text" id="newState" placeholder="State">
                            <div id="error4" class="error-message"></div>

                            <label for="newPincode">Pincode<span class="text-danger">*</span></label><br>
                            <input type="text" id="newPincode" placeholder="Pincode">
                            <div id="error5" class="error-message"></div>

                            <label for="newPhone">Phone Number<span class="text-danger">*</span></label><br>
                            <input type="text" id="newPhone" placeholder="Phone">
                            <div id="error6" class="error-message"></div><br>

                            <label for="newAltPhone">Alternative Phone (Optional)</label><br>
                            <input type="text" id="newAltPhone" placeholder="Alternative Phone"><br>

                            <label for="newAddressType">Address Type<span class="text-danger">*</span></label><br>
                            <select id="newAddressType">
                                <option value="">Select</option>
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                            </select><br>
                            <br><div id="error7" class="error-message"></div>

                            <!-- Other form fields here... -->

                            <button class="save-address" type="button" id="saveAddressBtn">Save Address</button>
                        </div>
                    </div>

                    <!-- Order Details Box on the right side -->
                    <div class="col-lg-4 col-md-12">
                        <div class="order-details-box">
                            <h6>Order Summary</h6>
                            <div class="order-summary-item">
                                <p>Items:</p>
                                <p> <%=cartCount%> items</p>
                            </div>
                            <div class="order-summary-item">
                                <p>Subtotal:</p>
                                <p><%=cartTotal%></p>
                            </div>
                            <div class="order-summary-item">
                                <p>Shipping:</p>
                                <p><%=shippingCharges%></p>
                            </div>
                            <div class="order-summary-item">
                                <p>Total:</p>
                                <p><%=netAmount%></p>
                            </div>
                            <button class="save-address" type="submit"><a class="text-decoration-none text-white" href="/payment">Proceed to Payment</a></button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

<script>

document.getElementById('addNewAddressBtn').addEventListener('click', function() {
    document.getElementById('newAddressModal').style.display = ( document.getElementById('newAddressModal').style.display === 'none' ||     document.getElementById('newAddressModal').style.display=== '') ? 'block' : 'none';
    document.getElementById('modalTitle').textContent = 'Add New Address';
    document.getElementById('saveAddressBtn').setAttribute('data-edit', 'false');
    if(document.getElementById('newAddressModal').style.display === 'none'){
        document.getElementById('addNewAddressBtn').innerText = "Add New Address"
    }else{
        document.getElementById('addNewAddressBtn').innerText = "Close"
    }
});


// Validation functions

function nameValidation() {
    const name = document.getElementById('newRecipient').value.trim();
    const errorElement = document.getElementById('error1');
    const namePattern = /^[a-zA-Z\s]{2,50}$/;

    if (name === "") {
        errorElement.innerText = "Please enter the full name.";
        return false;
    } else if (!namePattern.test(name)) {
        errorElement.innerText = "Name can only contain alphabets and spaces.";
        return false;
    } else {
        errorElement.innerText = "";
        return true;
    }
}

function addressValidation() {
    let valid = true;
    const street = document.getElementById('newStreet').value.trim();
    const streetError = document.getElementById('error2');
    if (street === "") {
        streetError.innerText = "Please enter the street address.";
        valid = false;
    } else {
        streetError.innerText = "";
    }


    const city = document.getElementById('newCity').value.trim();
    const cityError = document.getElementById('error3');
    if (city === "") {
        cityError.innerText = "Please enter the city.";
        valid = false;
    } else {
        cityError.innerText = "";
    }

    const state = document.getElementById('newState').value.trim();
    const stateError = document.getElementById('error4');
    if (state === "") {
        stateError.innerText = "Please enter the state.";
        valid = false;
    } else {
        stateError.innerText = "";
    }
    const pincode = document.getElementById('newPincode').value.trim();
    const pincodeError = document.getElementById('error5');
    const pincodePattern = /^\d{6}$/;
    if (!pincodePattern.test(pincode)) {
        pincodeError.innerText = "Please enter a valid 6-digit pincode.";
        valid = false;
    } else {
        pincodeError.innerText = "";
    }


    const phone = document.getElementById('newPhone').value.trim();
    const phoneError = document.getElementById('error6');
    const phonePattern = /^(\+\d{1,3}[- ]?)?\d{10}$/;
    if (!phonePattern.test(phone)) {
        phoneError.innerText = "Please enter a valid phone number.";
        valid = false;
    } else {
        phoneError.innerText = "";
    }

    return valid;
}

function addressTypeValidation() {
    const addressType = document.getElementById('newAddressType').value.trim();
    const errorElement = document.getElementById('error7');

    if (addressType === "") {
        errorElement.innerText = "Please select an address type.";
        return false;
    } else {
        errorElement.innerText = "";
        return true;
    }
}




// Save address button event listener
document.getElementById('saveAddressBtn').addEventListener('click', function(e) {
    const isNameValid = nameValidation();
    const isAddressValid = addressValidation();
    const isAddressTypeValid = addressTypeValidation();

    if (!isNameValid || !isAddressValid || !isAddressTypeValid) {
        e.preventDefault();
        return;
    }

    // Collecting new address data
    const newAddress = {
        recipient_name: document.getElementById('newRecipient').value.trim(),
        streetAddress: document.getElementById('newStreet').value.trim(),
        city: document.getElementById('newCity').value.trim(),
        state: document.getElementById('newState').value.trim(),
        pincode: document.getElementById('newPincode').value.trim(),
        phone: document.getElementById('newPhone').value.trim(),
        altPhone: document.getElementById('newAltPhone').value.trim(),
        addressType: document.getElementById('newAddressType').value.trim()
    };

    fetch('/save-address', {
        method: 'POST',
        body: JSON.stringify(newAddress),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            location.reload();
        } else {
            console.error('Error saving address:', result.message);
        }
    })
    .catch(err => console.error('Error saving address:', err));
});

const dropdownButton = document.getElementById('dropdownButton');
const dropdownList = document.getElementById('dropdownList');
const dropdownIcon = document.getElementById('dropdownIcon');
const hiddenInput = document.getElementById('selectedAddressValue');
const editAddressBtn = document.getElementById('editAddressBtn');

// Initially hide the edit button
editAddressBtn.style.display = 'none';

// Toggle the dropdown visibility and arrow direction
dropdownButton.addEventListener('click', () => {
    const isDropdownOpen = dropdownList.style.display === 'block';
    dropdownList.style.display = isDropdownOpen ? 'none' : 'block';
    dropdownIcon.classList.toggle('up', !isDropdownOpen);
});

// Select an address
dropdownList.addEventListener('click', (event) => {
    event.preventDefault()
    if (event.target.tagName === 'LI' && event.target.getAttribute('data-value')) {
        const selectedValue = event.target.getAttribute('data-value');
        const selectedText = event.target.textContent;

        // Update button text and hidden input
        dropdownButton.firstChild.textContent = selectedText;
        hiddenInput.value = selectedValue;

        // Show the edit button
        editAddressBtn.style.display = 'inline-block';

        // Hide the dropdown and reset the arrow
        dropdownList.style.display = 'none';
        dropdownIcon.classList.remove('up');
    }
});

// Close dropdown if clicking outside
document.addEventListener('click', (event) => {
    event.preventDefault()
    if (!dropdownButton.contains(event.target) && !dropdownList.contains(event.target)) {
        dropdownList.style.display = 'none';
        dropdownIcon.classList.remove('up');
    }
});

// Hide the edit button if no valid address is selected
hiddenInput.addEventListener('change', () => {
    if (!hiddenInput.value) {
        editAddressBtn.style.display = 'none';
    }
});


</script>







<%- include('../../views/partials/user/footer') %>
