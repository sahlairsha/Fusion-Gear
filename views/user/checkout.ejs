<%- include('../../views/partials/user/header') %>

<style>
    /* Add your existing CSS styles here */
    #newAddressModal {
        display: none;
        margin-top: 20px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #ffff;
    }

    #addNewAddressBtn + #newAddressModal {
        display: block;
    }

    input[type="text"] {
        width: 400px;
        height: 50px;
        margin-bottom: 20px;
        padding-left: 20px;
        border: 1px solid #0000002a;
        border-radius: 4px;
    }

    label {
        padding-top: 20px;
        padding-bottom: 5px;
    }

    .list-group {
        border-radius: 4px;
    }

    .model-form {
        margin-top: 50px;
    }

    h6 {
        font-weight: 600;
    }

    .checkout__form {
        display: flex;
        justify-content: space-between;
    }

    .col-lg-8 {
        flex: 0 0 60%;
        max-width: 60%;
    }

    .col-lg-4 {
        flex: 0 0 35%;
        max-width: 35%;
        position: relative;
        right: 0;
    }

    .more-options {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .more-options .btn {
        padding: 0;
        background: transparent;
        border: none;
        cursor: pointer;
        color: inherit;
    }

    .more-options i {
        color: #333;
    }

    .more-options .btn:hover i {
        color: #000;
    }

    .dropdown-list {
        display: none;
        position: absolute;
        right: 0;
        top: 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
        width: 100px;
        z-index: 10;
    }

    .more-options:hover .dropdown-list {
        display: block;
    }

    .dropdown-item {
        padding: 8px 12px;
        text-decoration: none;
        color: #333;
        cursor: pointer;
        display: block;
        font-size: 14px;
    }

    .dropdown-item:hover {
        background-color: #f0f0f0;
        color: rgba(0, 0, 255, 0.616);
    }

    .order-details-box {
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
        width: 100%;
        margin-top: 40px;
    }

    .order-summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .order-summary-item p {
        margin: 0;
        font-size: 16px;
        color: #333;
    }

    .save-address {
        background-color: #000;
        color: #fff;
        margin-top: 10px;
    }

    .save-address:hover {
        border: 1px solid #000;
        background-color: #fff;
        color: #000;
    }
</style>

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/products">Product</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="checkout spad">
    <div class="container-checkout">
        <div class="checkout__form d-flex justify-content-between">
            <!-- Left Section: Address List -->
            <div class="col-lg-8">
                <% if (address.length === 0 || !address.some(doc => doc.address.length > 0)) { %>
                    <div class="text-center">
                        <p class="fs-4">There is no address available. <br> <button class="btn btn-primary mt-3" id="showFormBtn">Add New Address</button></p>
                    </div>
                <% } else { %>
                    <!-- Display existing addresses -->
                    <h3 class="mb-4">Your Addresses</h3>
                    <ul class="list-group mb-4">
                        <% address.forEach(function(doc) { %>
                            <% doc.address.forEach(function(addr) { %>
                                <li class="list-group-item">
                                    <input type="radio" name="selectedAddress" value="<%= addr._id %>" id="<%= addr._id %>">
                                    <h6><%= addr.recipient_name %>
                                        <% if (addr.addressType) { %>
                                            <span class="badge mb-2"><%=addr.addressType%></span>
                                        <% } %>
                                    </h4>
                                    <strong><%= addr.streetAddress %>, <%= addr.city %>, <%= addr.state %></strong><br>
                                    Pincode: <%= addr.pincode %> <br>
                                    Landmark: <%= addr.landMark || 'N/A' %><br>
                                    <span class="text-muted">Phone: <%= addr.phone || 'N/A' %></span>
                                    <div class="more-options">
                                    <button class="btn btn-link"><i class="fa-solid fa-ellipsis-vertical"></i></button>
                                    <div class="dropdown-list">
                                      <ul>
                                      <li><a href="#" class="dropdown-item edit-address" data-id="<%= addr._id %>">Edit</a>
                                     </ul>
                                    </div>
                                    </div>

                                    
            
                                </li>
                            <% }); %>
                        <% }); %>
                    </ul>
                <% } %>
                <button id="continueWithAddress" class="btn btn-primary mt-3">Continue</button> 
            

                   
                <button class="btn save-address" id="addNewAddressBtn">Add New Address</button>
                <!-- Modal Form -->
                <div class="model-form" id="newAddressModal"  style="display: none;">
                    <h6 id="modalTitle">Add New Address</h6>
                    <form id="shippingForm" action="/save-address" method="POST">
                        <input type="hidden" id="actionType" name="actionType" value="add">

                        <label for="newRecipient">Name<span class="text-danger">*</span></label><br>
                        <input type="text" id="newRecipient" name="recipient_name"  placeholder="Recipient Name">
                        <div id="error1" class="error-message"></div>

                        <label for="newStreet">Street Address<span class="text-danger">*</span></label><br>
                        <input type="text" id="newStreet" name="streetAddress"  placeholder="Street Address">
                        <div id="error2" class="error-message"></div>

                        <label for="newCity">City<span class="text-danger">*</span></label><br>
                        <input type="text" id="newCity" name="city"  placeholder="City">
                        <div id="error3" class="error-message"></div>

                        <label for="newLandMark">Land Mark(optional)</label><br>
                        <input type="text" id="newLandMark" name="landMark"  placeholder="Land Mark"><br>

                        <label for="newState">State<span class="text-danger">*</span></label><br>
                        <input type="text" id="newState" name="state"  placeholder="State">
                        <div id="error4" class="error-message"></div>

                        <label for="newPincode">Pincode<span class="text-danger">*</span></label><br>
                        <input type="text" id="newPincode"  name="pincode"   placeholder="Pincode">
                        <div id="error5" class="error-message"></div>

                        <label for="newPhone">Phone Number<span class="text-danger">*</span></label><br>
                        <input type="text" id="newPhone" name="phone"   placeholder="Phone">
                        <div id="error6" class="error-message"></div><br>

                        <label for="newAltPhone">Alternative Phone (Optional)</label><br>
                        <input type="text" id="newAltPhone" name="altPhone"   placeholder="Alternative Phone"><br>

                        <label for="newAddressType">Address Type<span class="text-danger">*</span></label><br>
                        <select id="newAddressType" name="addressType">
                            <option value="">Select</option>
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                        </select><br>
                        <div id="error7" class="error-message"></div>
                        <br>
                        <button class="btn save-address" id="saveAddressBtn" type="button">Save And Deliver Here</button>
                    </form>
                </div>
            </div>
            <!-- Right Section: Order Details -->
            <div class="col-lg-4">
                <div class="order-details-box">
                    <h6>Order Summary</h6>
                    <div class="order-summary-item">
                        <p>Items:</p>
                        <p>
                            <%= cartCount %> items
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Subtotal:</p>
                        <p>
                            <%= cartTotal %>
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Shipping:</p>
                        <p>
                            <%= shippingCharges %>
                        </p>
                    </div>
                    <div class="order-summary-item">
                        <p>Total:</p>
                        <p>
                            <%= netAmount %>
                        </p>
                    </div>
                    <button id="continueWithAddress"  class="btn btn-success w-100">
                        Proceed to Payment
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<script>


    // Validation functions
    function nameValidation() {
        const name = document.getElementById('newRecipient').value.trim();
        const errorElement = document.getElementById('error1');
        const namePattern = /^[a-zA-Z\s]{2,50}$/;

        if (name === "") {
            errorElement.innerText = "Please enter the full name.";
            return false;
        } else if (!namePattern.test(name)) {
            errorElement.innerText = "Name can only contain alphabets and spaces.";
            return false;
        } else {
            errorElement.innerText = "";
            return true;
        }
    }

    
    function addressValidation() {
    let valid = true;
    const street = document.getElementById('newStreet').value.trim();
    const city = document.getElementById('newCity').value.trim();
    const state = document.getElementById('newState').value.trim();
    const pincode = document.getElementById('newPincode').value.trim();
    const phone = document.getElementById('newPhone').value.trim();
    const addressType = document.getElementById('newAddressType').value.trim();

    const phonePattern = /^(\+\d{1,3}[- ]?)?\d{10}$/;
    const pincodePattern = /^\d{6}$/;
    const allZero = /^0+$/;

    if (street === "") {
        valid = false;
        document.getElementById('error2').innerText = "Please enter street address";
    } else {
        document.getElementById('error2').innerText = "";
    }

    if (city === "") {
        valid = false;
        document.getElementById('error3').innerText = "Please enter city";
    } else {
        document.getElementById('error3').innerText = "";
    }

    if (state === "") {
        valid = false;
        document.getElementById('error4').innerText = "Please enter state";
    } else {
        document.getElementById('error4').innerText = "";
    }

    if (pincode === '') {
        valid = false;
        document.getElementById('error5').innerText = "Enter the pincode";
    } else if (allZero.test(pincode)) {
        valid = false;
        document.getElementById('error5').innerText = "Pincode cannot be all zeros!";
    } else if (!pincodePattern.test(pincode)) {
        valid = false;
        document.getElementById('error5').innerText = "Enter a valid pincode";
    } else {
        document.getElementById('error5').innerText = "";
    }

    if (phone === '') {
        valid = false;
        document.getElementById('error6').innerText = "Phone number cannot be all zeros!";
    } else if (!phonePattern.test(phone)) {
        valid = false;
        document.getElementById('error6').innerText = "Enter a valid phone number";
    } else if (allZero.test(phone)) {
        valid = false;
        document.getElementById('error6').innerText = "Enter a valid phone number";
    } else {
        document.getElementById('error6').innerText = "";
    }

    return valid;
}


    function addressTypeValidation() {
            const addressType = document.getElementById('newAddressType').value.trim();
            const errorElement = document.getElementById('error7');

            if (addressType === "") {
                errorElement.innerText = "Please select an address type.";
                return false;
            } else {
                errorElement.innerText = "";
                return true;
            }
        }

// Show modal for adding or editing address
document.getElementById('addNewAddressBtn').addEventListener('click', function () {
    const formContainer = document.getElementById('newAddressModal');
    formContainer.style.display = (formContainer.style.display === 'none' || formContainer.style.display === '') ? 'block' : 'none';
    document.getElementById('modalTitle').innerText = "Add New Address";
    document.getElementById('saveAddressBtn').innerText = "Save Address";

    // Clear form inputs
    document.getElementById('shippingForm').reset();
    document.getElementById('actionType').value = "add";
    document.getElementById('shippingForm').action = "/save-address";
    document.getElementById('addNewAddressBtn').innerText = "Cancel";
});


// Fetch existing address for editing
document.querySelectorAll('.edit-address').forEach((editLink) => {
    editLink.addEventListener('click', async (e) => {
        e.preventDefault();
        const addressId = e.target.getAttribute('data-id');

        console.log('Address id:',addressId)
        try {
            const response = await fetch(`/edit-address/${addressId}`);
            const addressData = await response.json();

            if (response.ok) {
                // Populate form fields
                document.getElementById('newRecipient').value = addressData.recipient_name;
                document.getElementById('newStreet').value = addressData.streetAddress;
                document.getElementById('newCity').value = addressData.city;
                document.getElementById('newState').value = addressData.state;
                document.getElementById('newPincode').value = addressData.pincode;
                document.getElementById('newLandMark').value = addressData.landMark || '';
                document.getElementById('newPhone').value = addressData.phone;
                document.getElementById('newAltPhone').value = addressData.altPhone || '';
                document.getElementById('newAddressType').value = addressData.addressType;

                // Update modal for editing
                document.getElementById('modalTitle').innerText = "Edit Address";
                document.getElementById('saveAddressBtn').innerText = "Update Address";

                // Set action type and update form action
                document.getElementById('actionType').value = "edit";
                const form = document.getElementById('shippingForm');
                form.action = `/update-address/${addressId}`;

                // Show modal
                document.getElementById('newAddressModal').style.display = 'block';
                document.getElementById('addNewAddressBtn').style.display = "none";
            } else {
                Swal.fire({
                    title: "Error!",
                    text: 'Failed to fetch address data. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error fetching address:', error);
            Swal.fire({
                title: "Error!",
                text: 'Something went wrong. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    });
});

// Save or update address handler
document.getElementById("saveAddressBtn").onclick = async function () {
    const isNameValid = nameValidation();
    const isAddressValid = addressValidation();
    const isTypeValid = addressTypeValidation();

    if (!isNameValid || !isAddressValid || !isTypeValid) {
        return;
    } else {
        const addressData = {
            recipient_name: document.getElementById('newRecipient').value.trim(),
            streetAddress: document.getElementById('newStreet').value.trim(),
            city: document.getElementById('newCity').value.trim(),
            state: document.getElementById('newState').value.trim(),
            pincode: document.getElementById('newPincode').value.trim(),
            phone: document.getElementById('newPhone').value.trim(),
            lanMark :document.getElementById('newLandMark').value.trim(),
            altPhone: document.getElementById('newAltPhone').value.trim(),
            addressType: document.getElementById('newAddressType').value.trim(),
        };

        // Log the address data to check for any empty fields
        console.log('Address data:', addressData);


        const form = document.getElementById('shippingForm');
        const actionType = document.getElementById('actionType').value;
        const url = actionType === "edit" ? form.action : '/save-address';

        try {
            const response = await fetch(url, {
                method: form.method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(addressData),
            });

            const responseData = await response.json();
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: responseData.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: responseData.message || 'Failed to save address. Try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                title: 'Error!',
                text: 'Something went wrong. Please try again later.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    }
};



document.getElementById('continueWithAddress').addEventListener('click', async function () {
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    
    if (!selectedAddress) {
        Swal.fire({
            title: 'Error!',
            text: 'Please select an address before proceeding.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    const addressId = selectedAddress.value;

    try {
        // Send the selected address to the server or navigate to the payment page
        const response = await fetch('/set-selected-address', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ addressId }),
        });

        const responseData = await response.json();
        if (response.ok) {
            window.location.href = '/payment';
        } else {
            Swal.fire({
                title: 'Error!',
                text: responseData.message || 'Failed to select address. Try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error selecting address:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
});


</script>

<%- include('../../views/partials/user/footer') %>
