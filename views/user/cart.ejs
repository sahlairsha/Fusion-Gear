<%- include('../../views/partials/user/header') %>

<style>
/* Your custom styles */
.address-box {
    background-color: #fff; 
    padding: 20px; 
    border-radius: 10px; 
    margin-bottom: 20px;
    width: 90%; 
    max-width: 700px; 
    position: relative; 
    margin-bottom: 50px;
    border: 1px dotted #000;
    align-items: center;
}
.address-box h6 {
    font-size: 1.2rem;
    font-weight: 600; 
    color: #333; 
    margin-bottom: 5px; 
}
.address-box p {
    font-size: 1rem;
    color: #555; 
    margin: 5px 0;
}
.address-box button {
    background-color:#000 ;
    color: white;
    border: none;
    padding: 8px 20px;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
    position: absolute;
    top: 18px;
    right: 20px;
}
.address-box button:hover {
    background-color: #00000079;
}
.address-box button a {
    color: white;
    text-decoration: none;
}

.continue__btn{
    margin-top: 30px;
    width: 280px;
    height: 50px;
    background-color: #fff;
    transition: 0.3s ease-in;
    border: 1px solid #000;
    border-radius: 3px;
}
.continue__btn a{
    color: #000;
    font-weight: 500;
    text-transform: uppercase;
    padding: 5px 5px 5px 5px ;
    transition: 0.3s ease-in;
}

.continue__btn:hover{
    background-color: #000;
}
.continue__btn a:hover{
    color: #fff;
}
.shopping__cart__summary {
    background-color: #ffff;
    border: 1px solid #ddd;
    padding: 20px;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Adjust cart totals item list */
.shopping__cart__summary ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    width: 100%;
}

.shopping__cart__summary ul li {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px dotted #ccc;
    font-size: 1.1rem;
}

.shopping__cart__summary ul li span {
    font-weight: bold;
}

/* Adjust checkout button */
.checkout-btn {
    width: 100%;
    margin-top: 20px;
}

.checkout-btn .primary-btn {
    width: 100%;
    padding: 12px 0;
    background-color: #000;
    color: white;
    border: none;
    font-size: 14px;
    border-radius: 6px;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
}

.checkout-btn .primary-btn:hover {
    background-color: #787877;
}

@media (max-width: 768px) {
    /* Make cart summary more compact on smaller screens */
    .shopping__cart__summary {
        padding: 15px;
    }

    .shopping__cart__summary ul li {
        font-size: 1rem;
    }

    .checkout-btn .primary-btn {
        font-size: 1rem;
        padding: 10px 0;
    }
}


@media (max-width: 768px) {
    .address-box {
        padding: 15px;
        width: 95%;
    }
    .address-box h6 {
        font-size: 1.1rem;
    }
    .address-box p {
        font-size: 0.9rem;
    }
}

/* Hides the default increment and decrement buttons in number input fields */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.product__cart__item__pic{
    width:80px;
    height: 40px;
    
}

.quantity-input{
    border: none;
    background-color: #ffff;
}

.remove-item{
    margin-left: 20px;
}

.quantity {
    display: flex;
    align-items: center;
}

.quantity button {
    background-color: #fff;
    border: none;
    font-weight: 700;
    font-size: 1.2rem;
    padding: 5px 10px;
    cursor: pointer;
}

.quantity input {
    width: 50px;
    text-align: center;
    font-size: 1.2rem;
    margin: 0 10px;
    padding: 5px;
    border:none;
}

.quantity button:hover {
    background-color: #ccc;
}

.quantity button:focus {
    outline: none;
}

.alert{
    margin-left: 300px;
    margin-top: 10px;
}

</style>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Shopping Cart</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/products">Products</a>
                        <span>Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<% if(flash.error) {%>
<div class="alert alert-danger alert-box w-50 text-center"><%= flash.error  %></div>
<% } %>

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <!-- Cart Table -->
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                             
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cartItems.forEach(item => { %>
                                <tr>
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <a href="/product/view?id=<%= item.product._id %>">
                                                <img src="/uploads/public-image/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>">
                                            </a>
                                        </div>
                                        <div class="product__cart__item__text">
                                            <h6><%= item.product.productName %></h6>
                                            
                                            <!-- Use selectedVariant for variant details -->
                                            <% if (item.selectedVariant) { %>
                                                <p><strong>Variant:</strong> <%= item.selectedVariant.color %> - <%= item.selectedVariant.size %></p>
                                                <h5>Price: ₹<%= item.selectedVariant.salePrice || item.selectedVariant.regularPrice %></h5>
                                            <% } else { %>
                                                <p><strong>Variant:</strong> N/A</p>
                                                <h5>Price: ₹<%= item.product.regularPrice %></h5>
                                            <% } %>
                                        </div>
                                    </td>
                                    <td class="quantity__item">
                                        <div class="quantity">
                                            <button class="btn-decrement"data-available-stock="<%= item.selectedVariant.stock %>" data-product-id="<%= item.product._id %>" data-variant-id="<%= item.selectedVariant._id %>" >-</button>
                                            <input type="number" value="<%= item.quantity %>" min="1" data-product-id="<%= item.product._id %>" class="quantity-input">
                                            <button class="btn-increment" data-available-stock="<%= item.selectedVariant.stock %>" data-product-id="<%= item.product._id %>" data-variant-id="<%= item.selectedVariant._id %>">+</button>
                                        </div>
                                    </td>
                                    <td class="cart__close">
                                        <a href="#" class="remove-item" data-product-id="<%= item.product._id %>"><i class="fa fa-close"></i></a>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                        
                    </table>
                </div>
                <button class="continue__btn"><a class="continue__link" href="/products">Continue to shopping</a></button>
            </div>
            <!-- Cart Summary -->
            <div class="col-lg-4">
                <div class="shopping__cart__summary">
                    <h5>Cart totals</h5>
                    <ul>
                        <li>Subtotal <span id="cartTotal">₹<%= cartTotal %></span></li>
                        <li>Discount <span id="discount">-₹<%= discount %></span></li>
                        <li>Shipping <span id="shippingCharges">₹<%= shippingCharges %></span></li>
                        <li>Total <span id="netAmount">₹<%= netAmount %></span></li>
                    </ul>
                    
                    <div class="checkout-btn">
                        <a href="#" class="primary-btn">Proceed to Checkout</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</section>
<!-- Shopping Cart Section End -->

<script>
    // Update Cart Quantity Logic
    document.addEventListener('click', async (event) => {
        if (event.target.closest('.btn-increment') || event.target.closest('.btn-decrement')) {
            event.preventDefault();

            const isIncrement = event.target.closest('.btn-increment') ? true : false;
            const productId = event.target.closest('button').getAttribute('data-product-id');
            const variantId = event.target.getAttribute('data-variant-id');
            const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
            let quantity = parseInt(quantityInput.value);
            const availableStock = event.target.closest('button').getAttribute('data-available-stock');

            if (isIncrement) {
                quantity++;
            } else if (quantity > 1) {
                quantity--;
            }

            // Prevent quantity exceeding stock
            if (quantity > availableStock) {
                Swal.fire({
                    icon: 'error',
                    title: 'Stock Limit',
                    text: `Only ${availableStock} items are available. Please reduce the quantity.`,
                });
                return;
            }

            quantityInput.value = quantity;

            try {
                const response = await fetch(`/cart/update-quantity/${productId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ quantity , variantId})
                });

                const data = await response.json();

                if (response.ok) {
                    updateCartUI(data);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed',
                        text: 'Failed to update product quantity',
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error updating quantity',
                });
            }
        }
    });

    function updateCartUI(data) {
        document.querySelector('#cartTotal').textContent = `₹${data.cartTotal}`;
        document.querySelector('#discount').textContent = `-₹${data.discount}`;
        document.querySelector('#shippingCharges').textContent = `₹${data.shippingCharges}`;
        document.querySelector('#netAmount').textContent = `₹${data.netAmount}`;
    }

    // Remove item from cart logic
    document.addEventListener('click', async (event) => {
        if (event.target.closest('.remove-item')) {
            event.preventDefault();
            const productId = event.target.closest('.remove-item').getAttribute('data-product-id');

            try {
                const response = await fetch(`/cart/delete/${productId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await response.json();

                if (response.ok) {
                    event.target.closest('tr').remove();
                    updateCartUI(data);

                    Swal.fire({
                        icon: 'success',
                        title: 'Removed',
                        text: 'Product removed from cart successfully!',
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed',
                        text: data.message || 'Failed to remove item',
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error removing item',
                });
            }
        }
    });


      // Prevent checkout if stock exceeds available limit
      document.querySelector('.primary-btn').addEventListener('click', async (event) => {
        event.preventDefault();

        const quantityInputs = document.querySelectorAll('.quantity-input');
        let hasInvalidStock = false;

        quantityInputs.forEach(input => {
            const quantity = parseInt(input.value);
            const availableStock = parseInt(
                input.closest('.quantity').querySelector('.btn-increment').getAttribute('data-available-stock')
            );

            if (quantity > availableStock) {
                hasInvalidStock = true;
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Stock Quantity',
                    text: `The quantity for "${input.closest('tr').querySelector('h6').innerText}" exceeds available stock (${availableStock}). Please update the quantity.`,
                });
            }
        });

        if (!hasInvalidStock) {
            window.location.href = "/checkout";
        }
    });
</script>


<%- include('../../views/partials/user/footer') %>