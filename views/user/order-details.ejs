<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="/css/user/order-details.css">

<div id="customAlertOverlay" class="custom-alert-overlay">
    <div class="custom-alert-box">
      <p id="customAlertMessage" class="custom-alert-message"></p>
      <button id="customAlertClose" class="custom-alert-close">Close</button>
    </div>
  </div>
  

<div class="details-container">
    <div class="order-details">

        <div class="delivery-address">
            <h3>Order Details</h3>
  <br>
            <h5 class="shipping-address">Shipping Address</h4>
            <p><strong>Recipient Name:</strong> <%=  shippingAddress.recipient_name %></p>
            <p><strong>Street Address:</strong> <%=  shippingAddress.streetAddress %>, <%=shippingAddress.city%>,<%= shippingAddress.state%>,<%= shippingAddress.pincode%></p>
            </p>
            <p>Phone:<%=shippingAddress.phone  %></p>
          
            
        </div>
     
        <a href="/generate-invoice/<%=orders._id%>"><button class="btn invoice-btn">Download Invoice</button></a>
        <div class="order-status mt-4">
            <h4>Order Status</h4>
        
            <% 
                const originalStatuses = ['Pending', 'Dispatch', 'Shipped', 'Delivered'];
                const isCanceled = orders.order_status === 'Canceled';
                const isReturned = orders.order_status === 'Return';
            %>
        
            <% if (isCanceled || isReturned) { %>
                <!-- Display only the Canceled or Return status -->
                <div class="status-alone">
                    <img src="/images/<%= isCanceled ? 'canceled.png' : 'return.png' %>" alt="<%= orders.order_status %>">
                    <p><%= orders.order_status %></p>
                </div>
            <% } else { %>
                <!-- Full timeline for normal statuses -->
                <div class="timeline">
                    <% originalStatuses.forEach((status, index) => { 
                        let stepClass = '';
                        
                        if (orders.order_status === status) {
                            stepClass = 'active';
                        } else if (originalStatuses.indexOf(orders.order_status) > index) {
                            stepClass = 'completed';
                        } else {
                            stepClass = 'inactive';
                        }
                    %>
                        <div class="timeline-step <%= stepClass %>">
                            <img src="/images/<%= status.toLowerCase() %>.png" alt="<%= status %>">
                            <p><%= status %></p>
                        </div>
                    <% }); %>
                </div>
            <% } %>
        </div>
        
        
    <div class="product-details">
        <% orders.products.forEach(item => { %>

        <div class="product-card">
         
            <img src="/uploads/public-image/<%= item.product_id.productImage[0] %>" 
            alt="<%= item.product_id.productName %>" class="product-img">
           
            <div class="product-info">
                <h4><%= item.product_id.productName %></h4>
                <% if (item.variantDetails) { %>
                    <p>Color: <%= item.variantDetails.color %></p>
                    <p>Size: <%= item.variantDetails.size %></p>
                    <p>Quantity: <%= item.quantity %></p>
            <p>Price: ₹<%= item.variantDetails.salePrice || item.variantDetails.regularPrice %></p>
                <% } else { %>
                    <p>No variant details available</p>
                <% } %>
            </div>

            <% }) %>
            <h5>Total: ₹<%= orders.total_price %></h3>

                 
                 <% if (orders.order_status === 'Dispatch') { %>
                    <button type="submit" class="btn btn-danger ml-4"><a  class="cancel" href="/orders/cancel/confirm?id=<%= orders._id  %>">Cancel Order</a></button>
            <% }else if(orders.order_status === 'Delivered') {%>
                <a  class="return" href="/order/return-form?id=<%= orders._id  %>"><button type="submit" class="btn btn-primary ml-4">Return Order</button></a>
                <% } %>
               </div>
            </div>
        </div>
    </div>

</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.8.1/socket.io.js" integrity="sha512-8BHxHDLsOHx+flIrQ0DrZcea7MkHqRU5GbTHmbdzMRnAaoCIkZ97PqZcXJkKZckMMhqfoeaJE+DNUVuyoQsO3Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
   
        const socket = io({
            auth: { userId: "<%= user._id %>" }
        });

        socket.on("connect", () => {
            console.log("Connected to the server");
        });

        
        socket.on("connect_error", (err) => {
                 showAlert("Connection to the server lost. Please check your network.", "error");
        });

     
        socket.on("order_update", (data) => {
           
            showAlert(data.message, "success");
            updateTimeline(data.status);
        
        });

        // Function to display custom styled alert
        function showAlert(message, type) {
            const alertBox = document.createElement('div');
            alertBox.classList.add('alert', type);
            alertBox.innerHTML = message;
            document.body.appendChild(alertBox);
            
           
            setTimeout(() => {
                alertBox.remove();
            }, 10000);

        }

        function updateTimeline(currentStatus) {
    const statuses = ['Pending', 'Dispatch', 'Shipped', 'Delivered', 'Canceled', 'Return'];
    const timeline = document.getElementById("timeline");

    if (timeline) {
        timeline.innerHTML = statuses
            .map((status, index) => {
                let stepClass = '';
                let displayText = status; 

               
                if (currentStatus === 'Canceled') {
                    stepClass = status === 'Canceled' ? 'completed canceled' : 'inactive';
                    if (status === 'Return') displayText = 'Not Applicable';
                } 
               
                else if (currentStatus === 'Return') {
                    stepClass = status === 'Return' ? 'active return' : 'inactive';
                    if (status === 'Canceled') displayText = 'Not Applicable';
                }
              
                else if (currentStatus === status) {
                    stepClass = 'active';
                }
                
                else if (statuses.indexOf(currentStatus) > index) {
                    stepClass = 'completed';
                } 
             
                else {
                    stepClass = 'inactive';
                }

          
                return `
                    <div class="timeline-step ${stepClass}">
                        <img src="/images/${status.toLowerCase()}.png" alt="${status}">
                        <p>${displayText}</p>
                    </div>`;
            })
            .join('');
    }
}


</script>

<script>
document.addEventListener("DOMContentLoaded", () => {
    // Function to clear URL parameters
    function clearURLParams() {
        // Replace the current URL with one without query parameters
        history.replaceState(null, document.title, window.location.pathname);
    }

    // Detect URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const action = urlParams.get('action');
    const message = urlParams.get('message');
    
    // Only show the alert if the action is 'cancel' or 'return' and message exists
    if ((action === 'cancel' || action === 'return') && message && message.trim() !== '') {
        const alertOverlay = document.getElementById('customAlertOverlay');
        const alertMessage = document.getElementById('customAlertMessage');
        const alertCloseButton = document.getElementById('customAlertClose');
        
        alertMessage.textContent = message;
        alertOverlay.style.display = 'flex';
        
        // Close the alert when the button is clicked
        alertCloseButton.addEventListener('click', () => {
            alertOverlay.style.display = 'none';
            clearURLParams();
        });
    } else {
        // Ensure the alert is hidden if no cancel or return action
        const alertOverlay = document.getElementById('customAlertOverlay');
        alertOverlay.style.display = 'none';
    }
});


</script>



<%- include('../../views/partials/user/footer') %>