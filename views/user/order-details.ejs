<%- include('../../views/partials/user/header') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


<style>
/* Container Styling */
  /* Alert Box Styles */
    .alert {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 30px;
        background-color: #f44336;
        color: white;
        font-size: 16px;
        border-radius: 5px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 9999;
        animation: fadeInOut 5s ease-in-out;
    }

    .alert.success {
        background-color: #4CAF50;
    }

    .alert.error {
        background-color: #f44336;
    }

    /* Animation for fade in and fade out */
    @keyframes fadeInOut {
        0% { opacity: 0; }
        10% { opacity: 1; }
        90% { opacity: 1; }
        100% { opacity: 0; }
    }
.updated-step {
    animation: flash 1.5s ease-in-out;
}

@keyframes flash {
    0% { background-color: #e0ffe0; }
    100% { background-color: transparent; }
}
.details-container {
    width: 90%;
    max-width: 1200px;
    margin: 20px auto;
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

/* Delivery Address Section */
.order-details {
    border: 1px solid #ddd;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px; /* Space below delivery address */
    background-color: #fff;
}

/* Product Details Section */
.product-details {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background-color: #fff;
  
}

.product-card {
    display: flex;
    align-items: center;
    padding: 20px;
    width: 100%;
    flex-wrap: wrap;
}

.product-img {
    width: 120px;
    height: auto;
    margin-right: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.product-info {
    flex: 1; /* Allows the product-info to take up the remaining space */
    padding: 10px;
    box-sizing: border-box;
}

.product-info h4 {
    margin-bottom: 10px;
    color: #333;
    font-size: 16px;
    font-weight: 600;
}

.product-info p {
    font-size: 14px;
    color: #555;
    margin-right: 20px;
    display: inline-block;
}

.product-info h3 {
    margin-top: 10px;
    color: #2874f0;
    font-size: 16px;
}

/* Order Status */
.order-status {
    flex: 0 0 30%;
    margin-left: 20px;
}
/* Timeline Container */
.timeline {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    width: 100%;
    margin: 20px auto;
    padding: 10px 0;
}

/* Step Container */
.timeline-step {
    text-align: center;
    position: relative;
    flex: 1;
}

/* Step Circle */
.step-circle {
    width:15px;
    height:15px;
    background-color: #ddd;
    border-radius: 50%;
    margin: 3px auto;
    position: relative;
    z-index: 2; 
}

/* Step Text */
.step-text {
    margin-top: 8px;
    font-size: 14px;
    color: #777;
    font-weight: 300;
}

/* Line Between Steps */
.timeline-step::after {
    content: '';
    position: absolute;
    top: 9px;
    left: 50%;
    width: 100%;
    height: 4px;
    background-color: #ddd;
    z-index: 1;
}

/* Hide the line for the last step */
.timeline-step:last-child::after {
    display: none;
}

/* Completed Step */
.timeline-step.completed .step-circle {
    background-color: green;
}


/* Canceled Step */
.timeline-step.completed.canceled .step-circle {
    background-color: red;
}

.timeline-step.completed.canceled .step-text {
    color: red;
    font-weight: bold;
}

.timeline-step.canceled::after {
    background-color: red;
}

/* Inactive Step */
.timeline-step.inactive .step-circle {
    background-color: #ddd;
}

.timeline-step.inactive .step-text {
    color: #ddd;
    font-weight: normal;
}

.timeline-step.inactive::after {
    background-color: #ddd;
}


.timeline-step.completed .step-text {
    color: green;
    font-weight: bold;
}

.timeline-step.completed::after {
    background-color: green;
}

/* Active Step */
.timeline-step.active .step-circle {
    background-color: orange;
}

.timeline-step.active .step-text {
    color: orange;
    font-weight: bold;
}

/* Responsive Alignment */
@media (max-width: 768px) {
    .timeline {
        flex-direction: column;
        align-items: flex-start;
    }

    .timeline-step {
        margin-bottom: 20px;
    }

    .timeline-step::after {
        display: none;
    }
}

.shipping-address{
    font-weight: 800;
    margin-bottom: 30px;
}

.delivery-address{
    margin-bottom: 20px;
}
.delivery-address p{
    margin: 0;
}
.cancel{
    color: #fff;
}

.invoice-btn{
    border : 1px solid #000;
}
</style>
<div class="details-container">
    <div class="order-details">

        <div class="delivery-address">
            <h3>Order Details</h3>
  <br>
            <h5 class="shipping-address">Shipping Address</h4>
            <p><strong>Recipient Name:</strong> <%=  shippingAddress.recipient_name %></p>
            <p><strong>Street Address:</strong> <%=  shippingAddress.streetAddress %>, <%=shippingAddress.city%>,<%= shippingAddress.state%>,<%= shippingAddress.pincode%></p>
            </p>
            <p>Phone:<%=shippingAddress.phone  %></p>
          
            
        </div>
        <a href="/generate-invoice/<%=orders._id%>"><button class="btn invoice-btn">Download Invoice</button></a>
      
    <!-- Product Details Section BELOW the Address -->
    <div class="product-details">
        <% orders.products.forEach(item => { %>

        <div class="product-card">
         
            <img src="/uploads/public-image/<%= item.product_id.productImage[0] %>" 
            alt="<%= item.product_id.productName %>" class="product-img">
           
            <!-- Product Info -->
            <div class="product-info">
                <h4><%= item.product_id.productName %></h4>
                <% if (item.variantDetails) { %>
                    <p>Color: <%= item.variantDetails.color %></p>
                    <p>Size: <%= item.variantDetails.size %></p>
                    <p>Quantity: <%= item.quantity %></p>
                    <h6>Price: ₹<%= item.variantDetails.salePrice || item.variantDetails.regularPrice %></h6>
                <% } else { %>
                    <p>No variant details available</p>
                <% } %>
            </div>

            <% }) %>
            <h5>Total: ₹<%= orders.total_price %></h3>
            <!-- Order Status -->
            <div class="order-status">
                <h4>Order Status</h4>
                <% const orderStatuses = ['Pending','Dispatch', 'Shipped', 'Delivered', 'Canceled']; %>
            
                <div class="timeline">
                    <% orderStatuses.forEach((status, index) => { %>
                        <% 
                            let stepClass = '';
                            if (orders.order_status === 'Canceled') {
                                stepClass = status === 'Canceled' ? 'completed canceled' : 'inactive'; 
                            } else if (orders.order_status === status) {
                                stepClass = 'active'; 
                            } else if (orderStatuses.indexOf(orders.order_status) > index) {
                                stepClass = 'completed'; 
                            }
                        %>
                        <div class="timeline-step <%= stepClass %>">
                            <div class="step-circle"></div>
                            <div class="step-text"><%= status %></div>
                        </div>
                    <% }); %>
                </div>
            </div>
            
            
                 <!-- Cancel Order Button -->
<% if (orders.order_status === 'Dispatch') { %>
        <button type="submit" class="btn btn-danger"><a  class="cancel" href="/orders/cancel/confirm?id=<%= orders._id  %>">Cancel Order</a></button>
<% } %>

            </div>
        </div>
    </div>

</div>


</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.8.1/socket.io.js" integrity="sha512-8BHxHDLsOHx+flIrQ0DrZcea7MkHqRU5GbTHmbdzMRnAaoCIkZ97PqZcXJkKZckMMhqfoeaJE+DNUVuyoQsO3Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
   
          const socket = io({
            auth: { userId: "<%= user._id %>" }
        });

        // Handle successful connection
        socket.on("connect", () => {
            console.log("Connected to the server");
        });

        // Handle connection error
        socket.on("connect_error", (err) => {
            console.error("Connection error:", err.message);
            showAlert("Connection to the server lost. Please check your network.", "error");
        });

        // Listen for order update events
        socket.on("order_update", (data) => {
            console.log("Order update received:", data);
            showAlert(data.message, "success");
            updateTimeline(data.status);
        
        });

        // Function to display custom styled alert
        function showAlert(message, type) {
            const alertBox = document.createElement('div');
            alertBox.classList.add('alert', type);
            alertBox.innerHTML = message;
            document.body.appendChild(alertBox);
            
           
            setTimeout(() => {
                alertBox.remove();
            }, 10000);

        }

        // Helper function to regenerate the timeline HTML based on the current status
        function updateTimeline(currentStatus) {
            const statuses = ['Pending', 'Dispatch', 'Shipped', 'Delivered', 'Canceled'];
            const timeline = document.getElementById("timeline");
            if (timeline) {
                timeline.innerHTML = statuses
                    .map((status, index) => {
                        let stepClass = '';
                        if (currentStatus === 'Canceled') {
                            stepClass = status === 'Canceled' ? 'completed canceled' : 'inactive';
                        } else if (currentStatus === status) {
                            stepClass = 'active';
                        } else if (statuses.indexOf(currentStatus) > index) {
                            stepClass = 'completed';
                        }
                        return `
                            <div class="timeline-step ${stepClass}">
                                <div class="step-circle"></div>
                                <div class="step-text">${status}</div>
                            </div>`;
                    })
                    .join('');
            }
        }
</script>
<%- include('../../views/partials/user/footer') %>