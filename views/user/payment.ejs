<%- include('../../views/partials/user/header') %>

<style>
    .payment-container {
        width: 100%;
        max-width: 400px;
        background-color: #fff;
        border: 1px dotted #00000062;
        padding: 30px;
        border-radius: 5px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin: 30px auto; /* Centers the container */
        text-align: center;
    }
    .payment-container:hover{
        border: 1px solid #000;
    }

    h2 {
        margin-bottom: 20px;
        font-size: 24px;
        color: #333;
    }

    .payment-methods {
        margin: 20px 0;
    }

    .payment-option {
        display: flex;
        align-items: center;
        justify-content: space-between;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        transition: box-shadow 0.3s ease;
        cursor: pointer;
    }

    .payment-option:hover {
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .payment-option input[type="radio"] {
        appearance: none;
        width: 22px;
        height: 22px;
        border: 2px solid #000;
        border-radius: 50%;
        outline: none;
        margin-right: 15px;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

    .payment-option input[type="radio"]:checked {
        background-color: #000;
        border-color: #000;
    }

    .payment-option input[type="radio"]:checked::before {
        content: '';
        width: 10px;
        height: 10px;
        background-color: #fff;
        border-radius: 50%;
        display: block;
    }

    .payment-option label {
        font-size: 16px;
        color: #333;
        cursor: pointer;
        flex: 1;
        text-align: left;
    }

    .proceed-btn {
        display: none;
        width: 100%;
        padding: 15px;
        background-color: #000;
        color: #fff;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        margin-top: 20px;
        text-transform: uppercase;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .proceed-btn:hover {
        background-color: #333;
        transform: scale(1.02);
    }

    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 10px;
    }
</style>

<div class="payment-container">
    <h2>Choose Payment Method</h2>
    <form id="payment-form">
        <div class="payment-methods">
            <div class="payment-option" onclick="selectPaymentOption('razorpay')">
                <input type="radio" id="razorpay" name="payment_method" value="Razorpay">
                <label for="razorpay">Razorpay (Card, UPI, Net Banking)</label>
            </div>
            <div class="payment-option" onclick="selectPaymentOption('cod')">
                <input type="radio" id="cod" name="payment_method" value="COD">
                <label for="cod">Cash on Delivery (COD)</label>
            </div>
        </div>
        <div id="error-message" class="error-message"></div>
        <button type="submit" id="proceed-button" class="proceed-btn">Proceed</button>
    </form>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    const proceedButton = document.getElementById('proceed-button');
    const paymentForm = document.getElementById('payment-form');

    // Show the proceed button when a payment option is selected
    function selectPaymentOption(optionId) {
        document.getElementById(optionId).checked = true;
        proceedButton.style.display = 'block';
    }

    // Handle form submission
    paymentForm.addEventListener('submit', async function (e) {
        e.preventDefault();
        const paymentMethod = document.querySelector('input[name="payment_method"]:checked');
        const errorMessage = document.getElementById('error-message');

        if (!paymentMethod) {
            errorMessage.textContent = 'Please select a payment method.';
            return;
        }

        errorMessage.textContent = '';
        proceedButton.textContent = 'Processing...';
        proceedButton.disabled = true;

        if (paymentMethod.value === 'Razorpay') {
            // Initiate Razorpay payment
            try {
                const orderResponse = await fetch('/create-razorpay-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                const orderData = await orderResponse.json();
                if (!orderResponse.ok) throw new Error(orderData.message);

                console.log("order data for razor pay:",orderData)

                const options = {
                    key: 'YOUR_RAZORPAY_KEY_ID',
                    amount: orderData.amount,
                    currency: 'INR',
                    order_id: orderData.id,
                    name: 'Your Business Name',
                    description: 'Order Payment',
                    image: '/path/to/logo.png',
                    handler: async function (response) {
                        const verificationResponse = await fetch('/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature,
                            }),
                        });

                        const verificationResult = await verificationResponse.json();
                        if (verificationResult.success) {
                            Swal.fire({
                                title: 'Payment Successful!',
                                text: 'Your payment was successful.',
                                icon: 'success',
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false,
                            }).then(() => {
                                window.location.href = '/order-confirm';
                            });
                        } else {
                            throw new Error(verificationResult.message || 'Payment verification failed.');
                        }
                    },
                    prefill: {
                        name: 'User Name',
                        email: 'user@example.com',
                        contact: '1234567890',
                    },
                    theme: {
                        color: '#3399cc',
                    },
                };

                const razorpay = new Razorpay(options);
                razorpay.open();
            } catch (error) {
                errorMessage.textContent = error.message || 'Failed to initiate Razorpay payment.';
            } finally {
                proceedButton.textContent = 'Proceed';
                proceedButton.disabled = false;
            }
        } else {
            // Handle other payment methods (COD, UPI, Net Banking)
            try {
                const response = await fetch('/confirm-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        payment_method: paymentMethod.value,
                    }),
                });

                const result = await response.json();
                if (response.ok) {
                    Swal.fire({
                        title: 'Order Confirmed!',
                        text: 'You have selected ' + paymentMethod.value + ' as your payment method.',
                        icon: 'success',
                        timer: 3000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                    }).then(() => {
                        window.location.href = '/order-confirm';
                    });
                } else {
                    errorMessage.textContent = result.message || 'Failed to confirm the order.';
                }
            } catch (error) {
                errorMessage.textContent = 'An error occurred while confirming the order. Please try again.';
            } finally {
                proceedButton.textContent = 'Proceed';
                proceedButton.disabled = false;
            }
        }
    });
</script>
<%- include('../../views/partials/user/footer') %>
